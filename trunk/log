diff --git a/trunk/log b/trunk/log
index c9c2e3a..e69de29 100644
--- a/trunk/log
+++ b/trunk/log
@@ -1,262 +0,0 @@
-.dockerignore:flexlm/
-CMakeLists.txt:#add_subdirectory("flexlm")
-Binary file bin/unwrapped/mars_flow_x64 matches
-Binary file bin/unwrapped/merlin_flow matches
-Binary file bin/unwrapped/merlin_safe_exec matches
-build/mars-gen/tools/mars_flow/CMakeFiles/mars_flow_x64.dir/link.txt:/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++  -Wall -Wno-c++17-extensions -DBUILD_VERSION="\"."\" -DBUILD_DATE="\"Fri May 14 07:45:25 PDT 2021"\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   CMakeFiles/mars_flow_x64.dir/mars_flow_x64.cpp.o CMakeFiles/mars_flow_x64.dir/__/__/__/legacy/tools/parsers/src/file_parser.cpp.o  -o ../../../bin/mars_flow_x64   -L/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/tools/mars_flow  -L/home/hhu/WORK/Merlin_Compiler/trunk/legacy/../flexlm  -Wl,-rpath,/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/tools/mars_flow:/home/hhu/WORK/Merlin_Compiler/trunk/legacy/../flexlm -ldl -lpthread 
-build/mars-gen/tools/mars_flow/CMakeFiles/merlin_create_project.dir/link.txt:/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++  -Wall -Wno-c++17-extensions -DBUILD_VERSION="\"."\" -DBUILD_DATE="\"Fri May 14 07:45:25 PDT 2021"\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   CMakeFiles/merlin_create_project.dir/mars_create_project_x64.cpp.o  -o ../../../bin/merlin_create_project   -L/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/tools/mars_flow  -L/home/hhu/WORK/Merlin_Compiler/trunk/legacy/../flexlm 
-build/mars-gen/tools/mars_flow/CMakeFiles/mars_opt.dir/link.txt:/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++  -Wall -Wno-c++17-extensions -DBUILD_VERSION="\"."\" -DBUILD_DATE="\"Fri May 14 07:45:25 PDT 2021"\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   CMakeFiles/mars_opt.dir/mars_opt_wrapper.cpp.o  -o ../../../bin/mars_opt   -L/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/tools/mars_flow  -L/home/hhu/WORK/Merlin_Compiler/trunk/legacy/../flexlm 
-build/mars-gen/tools/mars_flow/CMakeFiles/merlin_flow_cloud.dir/link.txt:/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++  -Wall -Wno-c++17-extensions -DBUILD_VERSION="\"."\" -DBUILD_DATE="\"Fri May 14 07:45:25 PDT 2021"\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   CMakeFiles/merlin_flow_cloud.dir/mars_flow_cloud.cpp.o CMakeFiles/merlin_flow_cloud.dir/__/__/__/legacy/tools/parsers/src/file_parser.cpp.o  -o ../../../bin/merlin_flow_cloud   -L/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/tools/mars_flow  -L/home/hhu/WORK/Merlin_Compiler/trunk/legacy/../flexlm 
-build/mars-gen/tools/mars_flow/CMakeFiles/mars_exec_cloud.dir/link.txt:/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++  -Wall -Wno-c++17-extensions -DBUILD_VERSION="\"."\" -DBUILD_DATE="\"Fri May 14 07:45:25 PDT 2021"\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   CMakeFiles/mars_exec_cloud.dir/mars_exec_cloud.cpp.o CMakeFiles/mars_exec_cloud.dir/__/__/__/legacy/tools/parsers/src/file_parser.cpp.o  -o ../../../bin/mars_exec_cloud   -L/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/tools/mars_flow  -L/home/hhu/WORK/Merlin_Compiler/trunk/legacy/../flexlm 
-build/mars-gen/tools/mars_flow/CMakeFiles/merlin_flow.dir/link.txt:/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++  -Wall -Wno-c++17-extensions -DBUILD_VERSION="\"."\" -DBUILD_DATE="\"Fri May 14 07:45:25 PDT 2021"\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   CMakeFiles/merlin_flow.dir/mars_flow_x64.cpp.o CMakeFiles/merlin_flow.dir/__/__/__/legacy/tools/parsers/src/file_parser.cpp.o  -o ../../../bin/merlin_flow   -L/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/tools/mars_flow  -L/home/hhu/WORK/Merlin_Compiler/trunk/legacy/../flexlm  -Wl,-rpath,/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/tools/mars_flow:/home/hhu/WORK/Merlin_Compiler/trunk/legacy/../flexlm -ldl -lpthread 
-build/mars-gen/tools/mars_flow/CMakeFiles/mars_env_loader.dir/link.txt:/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++  -Wall -Wno-c++17-extensions -DBUILD_VERSION="\"."\" -DBUILD_DATE="\"Fri May 14 07:45:25 PDT 2021"\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   CMakeFiles/mars_env_loader.dir/mars_env_load.cpp.o  -o ../../../bin/mars_env_loader   -L/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/tools/mars_flow  -L/home/hhu/WORK/Merlin_Compiler/trunk/legacy/../flexlm 
-build/mars-gen/tools/mars_flow/CMakeFiles/marscc.dir/link.txt:/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++  -Wall -Wno-c++17-extensions -DBUILD_VERSION="\"."\" -DBUILD_DATE="\"Fri May 14 07:45:25 PDT 2021"\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   CMakeFiles/marscc.dir/marscc.cpp.o CMakeFiles/marscc.dir/__/__/__/legacy/tools/parsers/src/file_parser.cpp.o  -o ../../../bin/marscc   -L/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/tools/mars_flow  -L/home/hhu/WORK/Merlin_Compiler/trunk/legacy/../flexlm 
-build/mars-gen/tools/mars_flow/CMakeFiles/merlin_frontend.dir/link.txt:/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++  -Wall -Wno-c++17-extensions -DBUILD_VERSION="\"."\" -DBUILD_DATE="\"Fri May 14 07:45:25 PDT 2021"\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   CMakeFiles/merlin_frontend.dir/merlin_frontend.cpp.o  -o ../../../bin/merlin_frontend   -L/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/tools/mars_flow  -L/home/hhu/WORK/Merlin_Compiler/trunk/legacy/../flexlm 
-build/mars-gen/tools/mars_flow/CMakeFiles/mars_install.dir/link.txt:/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++  -Wall -Wno-c++17-extensions -DBUILD_VERSION="\"."\" -DBUILD_DATE="\"Fri May 14 07:45:25 PDT 2021"\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   CMakeFiles/mars_install.dir/mars_install.cpp.o  -o ../../../bin/mars_install   -L/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/tools/mars_flow  -L/home/hhu/WORK/Merlin_Compiler/trunk/legacy/../flexlm 
-build/mars-gen/tools/mars_flow/CMakeFiles/merlin_safe_exec.dir/link.txt:/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++  -Wall -Wno-c++17-extensions -DBUILD_VERSION="\"."\" -DBUILD_DATE="\"Fri May 14 07:45:25 PDT 2021"\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   CMakeFiles/merlin_safe_exec.dir/merlin_safe_exec.cpp.o CMakeFiles/merlin_safe_exec.dir/__/__/__/legacy/tools/parsers/src/file_parser.cpp.o  -o ../../../bin/merlin_safe_exec   -L/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/tools/mars_flow  -L/home/hhu/WORK/Merlin_Compiler/trunk/legacy/../flexlm  -Wl,-rpath,/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/tools/mars_flow:/home/hhu/WORK/Merlin_Compiler/trunk/legacy/../flexlm -lpthread 
-build/mars-gen/tools/mars_flow/CMakeFiles/merlincc.dir/link.txt:/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++  -Wall -Wno-c++17-extensions -DBUILD_VERSION="\"."\" -DBUILD_DATE="\"Fri May 14 07:45:25 PDT 2021"\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   CMakeFiles/merlincc.dir/merlincc.cpp.o  -o ../../../bin/merlincc   -L/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/tools/mars_flow  -L/home/hhu/WORK/Merlin_Compiler/trunk/legacy/../flexlm 
-build/mars-gen/tools/mars_flow/CMakeFiles/merlin_midend.dir/link.txt:/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++  -Wall -Wno-c++17-extensions -DBUILD_VERSION="\"."\" -DBUILD_DATE="\"Fri May 14 07:45:25 PDT 2021"\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   CMakeFiles/merlin_midend.dir/merlin_midend.cpp.o  -o ../../../bin/merlin_midend   -L/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/tools/mars_flow  -L/home/hhu/WORK/Merlin_Compiler/trunk/legacy/../flexlm 
-build/mars-gen/tools/mars_flow/CMakeFiles/merlin_backend.dir/link.txt:/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++  -Wall -Wno-c++17-extensions -DBUILD_VERSION="\"."\" -DBUILD_DATE="\"Fri May 14 07:45:25 PDT 2021"\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   CMakeFiles/merlin_backend.dir/merlin_backend.cpp.o  -o ../../../bin/merlin_backend   -L/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/tools/mars_flow  -L/home/hhu/WORK/Merlin_Compiler/trunk/legacy/../flexlm 
-build/mars-gen/tools/mars_flow/CMakeFiles/merlinprof.dir/link.txt:/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++  -Wall -Wno-c++17-extensions -DBUILD_VERSION="\"."\" -DBUILD_DATE="\"Fri May 14 07:45:25 PDT 2021"\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   CMakeFiles/merlinprof.dir/merlinprof.cpp.o  -o ../../../bin/merlinprof   -L/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/tools/mars_flow  -L/home/hhu/WORK/Merlin_Compiler/trunk/legacy/../flexlm 
-build/mars-gen/tools/mars_flow/CMakeFiles/merlin_license.dir/link.txt:/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++  -Wall -Wno-c++17-extensions -DBUILD_VERSION="\"."\" -DBUILD_DATE="\"Fri May 14 07:45:25 PDT 2021"\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   CMakeFiles/merlin_license.dir/merlin_license.cpp.o  -o ../../../bin/merlin_license   -L/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/tools/mars_flow  -L/home/hhu/WORK/Merlin_Compiler/trunk/legacy/../flexlm  -Wl,-rpath,/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/tools/mars_flow:/home/hhu/WORK/Merlin_Compiler/trunk/legacy/../flexlm -ldl -lpthread 
-build/mars-gen/tools/mars_flow/CMakeFiles/display.dir/link.txt:/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++  -Wall -Wno-c++17-extensions -DBUILD_VERSION="\"."\" -DBUILD_DATE="\"Fri May 14 07:45:25 PDT 2021"\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   CMakeFiles/display.dir/display.cpp.o  -o ../../../bin/display   -L/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/tools/mars_flow  -L/home/hhu/WORK/Merlin_Compiler/trunk/legacy/../flexlm 
-Binary file build/mars-gen/tools/mrefactor/CMakeFiles/mrefactor.dir/mrefactor.cpp.o matches
-Binary file build/bin/merlin_license matches
-Binary file build/bin/merlin_safe_exec matches
-Binary file build/bin/mars_flow_x64 matches
-Binary file build/bin/mrefactor matches
-Binary file build/bin/merlin_flow matches
-build/source-opt/tools/rose/CMakeFiles/mars_rose.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/rose/CMakeFiles/mars_rose.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/mars_opt/CMakeFiles/mars_opt_org.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/mars_opt/CMakeFiles/mars_opt_org.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/mars_opt/CMakeFiles/mars_opt_utils.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/mars_opt/CMakeFiles/mars_opt_utils.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/add_pragma_kernel/CMakeFiles/AddPragmaKernel.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/add_pragma_kernel/CMakeFiles/AddPragmaKernel.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/altera_postprocess/CMakeFiles/AlteraPostprocess.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/altera_postprocess/CMakeFiles/AlteraPostprocess.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/altera_preprocess/CMakeFiles/AlteraPreprocess.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/altera_preprocess/CMakeFiles/AlteraPreprocess.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/array_linearize/CMakeFiles/ArrayLinearize.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/array_linearize/CMakeFiles/ArrayLinearize.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/array_delinearize/CMakeFiles/ArrayDelinearize.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/array_delinearize/CMakeFiles/ArrayDelinearize.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/auto_dim_interchange/CMakeFiles/AutoDimInterchange.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/auto_dim_interchange/CMakeFiles/AutoDimInterchange.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/auto_func_inline/CMakeFiles/AutoFuncInline.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/auto_func_inline/CMakeFiles/AutoFuncInline.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/auto_parallel_insertion/CMakeFiles/AutoParallelInsertion.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/auto_parallel_insertion/CMakeFiles/AutoParallelInsertion.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/bitwidth_opt/CMakeFiles/BitwidthOpt.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/bitwidth_opt/CMakeFiles/BitwidthOpt.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/coarse_parallel/CMakeFiles/CoarseParallel.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/coarse_parallel/CMakeFiles/CoarseParallel.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/coarse_pipeline/CMakeFiles/CoarsePipeline.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/coarse_pipeline/CMakeFiles/CoarsePipeline.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/comm_opt/CMakeFiles/CommOpt.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/comm_opt/CMakeFiles/CommOpt.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/constant_propagate/CMakeFiles/ConstantPropagation.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/constant_propagate/CMakeFiles/ConstantPropagation.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/data_transfer_gen/CMakeFiles/DataTransferGen.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/data_transfer_gen/CMakeFiles/DataTransferGen.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/detect_non_static_pointer/CMakeFiles/DetectNonStaticPointer.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/detect_non_static_pointer/CMakeFiles/DetectNonStaticPointer.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/detect_pointer_comparison/CMakeFiles/DetectPointerComparison.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/detect_pointer_comparison/CMakeFiles/DetectPointerComparison.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/detect_pointer_type_cast/CMakeFiles/DetectPointerTypeCast.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/detect_pointer_type_cast/CMakeFiles/DetectPointerTypeCast.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/detect_multidim_pointer/CMakeFiles/DetectMultiDimPointer.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/detect_multidim_pointer/CMakeFiles/DetectMultiDimPointer.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/final_code_gen/CMakeFiles/FinalCodeGen.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/final_code_gen/CMakeFiles/FinalCodeGen.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/function_inline/CMakeFiles/FunctionInline.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/function_inline/CMakeFiles/FunctionInline.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/gen_hierarchy/CMakeFiles/GenHierarchy.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/gen_hierarchy/CMakeFiles/GenHierarchy.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/gen_token_id/CMakeFiles/GenTokenId.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/gen_token_id/CMakeFiles/GenTokenId.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/gen_access_range_intrinsic/CMakeFiles/GenAccessRangeIntrisic.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/gen_access_range_intrinsic/CMakeFiles/GenAccessRangeIntrisic.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/id_update/CMakeFiles/IdUpdate.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/id_update/CMakeFiles/IdUpdate.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/ir/CMakeFiles/Ir.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/ir/CMakeFiles/Ir.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/input_checker/CMakeFiles/InputChecker.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/input_checker/CMakeFiles/InputChecker.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/interface_convert_bool/CMakeFiles/InterfaceBoolConvert.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/interface_convert_bool/CMakeFiles/InterfaceBoolConvert.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/interface_port_renaming/CMakeFiles/InterfacePortRenaming.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/interface_port_renaming/CMakeFiles/InterfacePortRenaming.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/interface_transform/CMakeFiles/InterfaceTransform.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/interface_transform/CMakeFiles/InterfaceTransform.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/kernel_pragma_gen/CMakeFiles/KernelPragmaGen.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/kernel_pragma_gen/CMakeFiles/KernelPragmaGen.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/kernel_separate/CMakeFiles/KernelSeparate.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/kernel_separate/CMakeFiles/KernelSeparate.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/kernel_wrapper/CMakeFiles/KernelWrapper.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/kernel_wrapper/CMakeFiles/KernelWrapper.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/loop_flatten/CMakeFiles/LoopFlatten.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/loop_flatten/CMakeFiles/LoopFlatten.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/loop_parallel/CMakeFiles/LoopParallel.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/loop_parallel/CMakeFiles/LoopParallel.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/loop_tiling/CMakeFiles/LoopTiling.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/loop_tiling/CMakeFiles/LoopTiling.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/lower_cpp/CMakeFiles/LowerCpp.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/lower_cpp/CMakeFiles/LowerCpp.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/lower_separate/CMakeFiles/LowerSeparate.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/lower_separate/CMakeFiles/LowerSeparate.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/memory_burst/CMakeFiles/MemoryBurst.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/memory_burst/CMakeFiles/MemoryBurst.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/memory_partition/CMakeFiles/MemoryPartition.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/memory_partition/CMakeFiles/MemoryPartition.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/channel_partition/CMakeFiles/ChannelPartition.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/channel_partition/CMakeFiles/ChannelPartition.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/memory_reduce/CMakeFiles/MemoryReduce.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/memory_reduce/CMakeFiles/MemoryReduce.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/midend_preprocess/CMakeFiles/MidendPreprocess.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/midend_preprocess/CMakeFiles/MidendPreprocess.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/dependency_resolve/CMakeFiles/DependencyResolve.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/dependency_resolve/CMakeFiles/DependencyResolve.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/stream_prefetch/CMakeFiles/StreamPrefetch.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/stream_prefetch/CMakeFiles/StreamPrefetch.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/performance_estimation/CMakeFiles/PerformanceEstimation.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/performance_estimation/CMakeFiles/PerformanceEstimation.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/postwrap_process/CMakeFiles/PostwrapProcess.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/postwrap_process/CMakeFiles/PostwrapProcess.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/synthesis_check/CMakeFiles/SynthesisCheck.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/synthesis_check/CMakeFiles/SynthesisCheck.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/preprocess/CMakeFiles/Preprocess.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/preprocess/CMakeFiles/Preprocess.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/program_analysis/CMakeFiles/ProgramAnalysis.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/program_analysis/CMakeFiles/ProgramAnalysis.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/reduction/CMakeFiles/Reduction.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/reduction/CMakeFiles/Reduction.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/reduction_general/CMakeFiles/ReductionGeneral.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/reduction_general/CMakeFiles/ReductionGeneral.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/remove_simple_pointer_alias/CMakeFiles/RemoveSimplePointerAlias.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/remove_simple_pointer_alias/CMakeFiles/RemoveSimplePointerAlias.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/replace_exp_visitor/CMakeFiles/ReplaceExpVisitor.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/replace_exp_visitor/CMakeFiles/ReplaceExpVisitor.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/simple_dce/CMakeFiles/SimpleDCE.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/simple_dce/CMakeFiles/SimpleDCE.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/stream_model/CMakeFiles/StreamModel.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/stream_model/CMakeFiles/StreamModel.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/struct_decompose/CMakeFiles/StructDecompose.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/struct_decompose/CMakeFiles/StructDecompose.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/structural_func_inline/CMakeFiles/StructuralFuncInline.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/structural_func_inline/CMakeFiles/StructuralFuncInline.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/line_buffer/CMakeFiles/LineBuffer.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/line_buffer/CMakeFiles/LineBuffer.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/source-opt/tools/detect_library_calls/CMakeFiles/DetectLibraryCalls.dir/DependInfo.cmake:  "../mars-gen/lib/flexlm"
-build/source-opt/tools/detect_library_calls/CMakeFiles/DetectLibraryCalls.dir/flags.make:CXX_INCLUDES = -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson 
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -DLINUX_COMMANDS -DHAS_DS_MARK     -DHAS_SYSTOLIC_FRONTEND -DHAS_SYSTOLIC_EXTRACT -DHAS_DS_LOOP_PARALLEL     -DHAS_LOOP_PARALLEL -DHAS_MARS_IR     -DHAS_STREAM_IR -DHAS_MEMORY_BURST -DHAS_LOWER_CPP     -DHAS_DEPENDENCY_RESOLVE     -DHAS_LOWER_SEPARATE -DHAS_COARSE_PIPELINE -DHAS_COARSE_PARALLEL     -DHAS_COARSE_PIPELINE_ALTERA -DHAS_DS_PIPELINE -DHAS_BITWIDTH_OPT     -DHAS_DS_BITWIDTH_OPT -DHAS_REDUCTION -DHAS_REDUCTION_GENERAL     -DHAS_PROGRAM_ANALYSIS -DHAS_ID_UPDATE -DHAS_PREPROCESS     -DHAS_FUNCTION_INLINE -DHAS_AUTO_FUNC_INLINE     -DHAS_AUTO_DIM_INTERCHANGE     -DHAS_KERNEL_WRAPPER -DHAS_KERNEL_PRAGMA_GEN     -DHAS_LOOP_TILING -DHAS_ALTERA_PREPROCESS     -DHAS_MEMORY_REDUCE -DHAS_MIDEND_PREPROCESS -DHAS_ALTERA_POSTPROCESS     -DHAS_STRUCT_DECOMPOSE  -DHAS_COMM_OPT  -DHAS_ARRAY_LINEARIZE     -DHAS_KERNEL_SEPARATE -DHAS_POSTWRAP_PROCESS -DHAS_MEMORY_PARTITION     -DHAS_PERFORMANCE_ESTIMATION -DHAS_GEN_TOKEN_ID -DHAS_GEN_HIERARCHY     -DHAS_ADD_PRAGMA_KERNEL -DHAS_FINAL_CODE_GEN -DHAS_DS_SCOPE -DHAS_DS_RESOURCE_EVAL -DHAS_DS_TILING     -DHAS_DS_SKELETON_EXTRACT -DHAS_LINE_BUFFER -o CMakeFiles/mars_rose.dir/codegen.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/rose/codegen.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -DLINUX_COMMANDS -DHAS_DS_MARK     -DHAS_SYSTOLIC_FRONTEND -DHAS_SYSTOLIC_EXTRACT -DHAS_DS_LOOP_PARALLEL     -DHAS_LOOP_PARALLEL -DHAS_MARS_IR     -DHAS_STREAM_IR -DHAS_MEMORY_BURST -DHAS_LOWER_CPP     -DHAS_DEPENDENCY_RESOLVE     -DHAS_LOWER_SEPARATE -DHAS_COARSE_PIPELINE -DHAS_COARSE_PARALLEL     -DHAS_COARSE_PIPELINE_ALTERA -DHAS_DS_PIPELINE -DHAS_BITWIDTH_OPT     -DHAS_DS_BITWIDTH_OPT -DHAS_REDUCTION -DHAS_REDUCTION_GENERAL     -DHAS_PROGRAM_ANALYSIS -DHAS_ID_UPDATE -DHAS_PREPROCESS     -DHAS_FUNCTION_INLINE -DHAS_AUTO_FUNC_INLINE     -DHAS_AUTO_DIM_INTERCHANGE     -DHAS_KERNEL_WRAPPER -DHAS_KERNEL_PRAGMA_GEN     -DHAS_LOOP_TILING -DHAS_ALTERA_PREPROCESS     -DHAS_MEMORY_REDUCE -DHAS_MIDEND_PREPROCESS -DHAS_ALTERA_POSTPROCESS     -DHAS_STRUCT_DECOMPOSE  -DHAS_COMM_OPT  -DHAS_ARRAY_LINEARIZE     -DHAS_KERNEL_SEPARATE -DHAS_POSTWRAP_PROCESS -DHAS_MEMORY_PARTITION     -DHAS_PERFORMANCE_ESTIMATION -DHAS_GEN_TOKEN_ID -DHAS_GEN_HIERARCHY     -DHAS_ADD_PRAGMA_KERNEL -DHAS_FINAL_CODE_GEN -DHAS_DS_SCOPE -DHAS_DS_RESOURCE_EVAL -DHAS_DS_TILING     -DHAS_DS_SKELETON_EXTRACT -DHAS_LINE_BUFFER -o CMakeFiles/mars_rose.dir/history.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/rose/history.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -DLINUX_COMMANDS -DHAS_DS_MARK     -DHAS_SYSTOLIC_FRONTEND -DHAS_SYSTOLIC_EXTRACT -DHAS_DS_LOOP_PARALLEL     -DHAS_LOOP_PARALLEL -DHAS_MARS_IR     -DHAS_STREAM_IR -DHAS_MEMORY_BURST -DHAS_LOWER_CPP     -DHAS_DEPENDENCY_RESOLVE     -DHAS_LOWER_SEPARATE -DHAS_COARSE_PIPELINE -DHAS_COARSE_PARALLEL     -DHAS_COARSE_PIPELINE_ALTERA -DHAS_DS_PIPELINE -DHAS_BITWIDTH_OPT     -DHAS_DS_BITWIDTH_OPT -DHAS_REDUCTION -DHAS_REDUCTION_GENERAL     -DHAS_PROGRAM_ANALYSIS -DHAS_ID_UPDATE -DHAS_PREPROCESS     -DHAS_FUNCTION_INLINE -DHAS_AUTO_FUNC_INLINE     -DHAS_AUTO_DIM_INTERCHANGE     -DHAS_KERNEL_WRAPPER -DHAS_KERNEL_PRAGMA_GEN     -DHAS_LOOP_TILING -DHAS_ALTERA_PREPROCESS     -DHAS_MEMORY_REDUCE -DHAS_MIDEND_PREPROCESS -DHAS_ALTERA_POSTPROCESS     -DHAS_STRUCT_DECOMPOSE  -DHAS_COMM_OPT  -DHAS_ARRAY_LINEARIZE     -DHAS_KERNEL_SEPARATE -DHAS_POSTWRAP_PROCESS -DHAS_MEMORY_PARTITION     -DHAS_PERFORMANCE_ESTIMATION -DHAS_GEN_TOKEN_ID -DHAS_GEN_HIERARCHY     -DHAS_ADD_PRAGMA_KERNEL -DHAS_FINAL_CODE_GEN -DHAS_DS_SCOPE -DHAS_DS_RESOURCE_EVAL -DHAS_DS_TILING     -DHAS_DS_SKELETON_EXTRACT -DHAS_LINE_BUFFER -o CMakeFiles/mars_rose.dir/program_analysis.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/rose/program_analysis.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -DLINUX_COMMANDS -DHAS_DS_MARK     -DHAS_SYSTOLIC_FRONTEND -DHAS_SYSTOLIC_EXTRACT -DHAS_DS_LOOP_PARALLEL     -DHAS_LOOP_PARALLEL -DHAS_MARS_IR     -DHAS_STREAM_IR -DHAS_MEMORY_BURST -DHAS_LOWER_CPP     -DHAS_DEPENDENCY_RESOLVE     -DHAS_LOWER_SEPARATE -DHAS_COARSE_PIPELINE -DHAS_COARSE_PARALLEL     -DHAS_COARSE_PIPELINE_ALTERA -DHAS_DS_PIPELINE -DHAS_BITWIDTH_OPT     -DHAS_DS_BITWIDTH_OPT -DHAS_REDUCTION -DHAS_REDUCTION_GENERAL     -DHAS_PROGRAM_ANALYSIS -DHAS_ID_UPDATE -DHAS_PREPROCESS     -DHAS_FUNCTION_INLINE -DHAS_AUTO_FUNC_INLINE     -DHAS_AUTO_DIM_INTERCHANGE     -DHAS_KERNEL_WRAPPER -DHAS_KERNEL_PRAGMA_GEN     -DHAS_LOOP_TILING -DHAS_ALTERA_PREPROCESS     -DHAS_MEMORY_REDUCE -DHAS_MIDEND_PREPROCESS -DHAS_ALTERA_POSTPROCESS     -DHAS_STRUCT_DECOMPOSE  -DHAS_COMM_OPT  -DHAS_ARRAY_LINEARIZE     -DHAS_KERNEL_SEPARATE -DHAS_POSTWRAP_PROCESS -DHAS_MEMORY_PARTITION     -DHAS_PERFORMANCE_ESTIMATION -DHAS_GEN_TOKEN_ID -DHAS_GEN_HIERARCHY     -DHAS_ADD_PRAGMA_KERNEL -DHAS_FINAL_CODE_GEN -DHAS_DS_SCOPE -DHAS_DS_RESOURCE_EVAL -DHAS_DS_TILING     -DHAS_DS_SKELETON_EXTRACT -DHAS_LINE_BUFFER -o CMakeFiles/mars_rose.dir/common.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/rose/common.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -DLINUX_COMMANDS -DHAS_DS_MARK     -DHAS_SYSTOLIC_FRONTEND -DHAS_SYSTOLIC_EXTRACT -DHAS_DS_LOOP_PARALLEL     -DHAS_LOOP_PARALLEL -DHAS_MARS_IR     -DHAS_STREAM_IR -DHAS_MEMORY_BURST -DHAS_LOWER_CPP     -DHAS_DEPENDENCY_RESOLVE     -DHAS_LOWER_SEPARATE -DHAS_COARSE_PIPELINE -DHAS_COARSE_PARALLEL     -DHAS_COARSE_PIPELINE_ALTERA -DHAS_DS_PIPELINE -DHAS_BITWIDTH_OPT     -DHAS_DS_BITWIDTH_OPT -DHAS_REDUCTION -DHAS_REDUCTION_GENERAL     -DHAS_PROGRAM_ANALYSIS -DHAS_ID_UPDATE -DHAS_PREPROCESS     -DHAS_FUNCTION_INLINE -DHAS_AUTO_FUNC_INLINE     -DHAS_AUTO_DIM_INTERCHANGE     -DHAS_KERNEL_WRAPPER -DHAS_KERNEL_PRAGMA_GEN     -DHAS_LOOP_TILING -DHAS_ALTERA_PREPROCESS     -DHAS_MEMORY_REDUCE -DHAS_MIDEND_PREPROCESS -DHAS_ALTERA_POSTPROCESS     -DHAS_STRUCT_DECOMPOSE  -DHAS_COMM_OPT  -DHAS_ARRAY_LINEARIZE     -DHAS_KERNEL_SEPARATE -DHAS_POSTWRAP_PROCESS -DHAS_MEMORY_PARTITION     -DHAS_PERFORMANCE_ESTIMATION -DHAS_GEN_TOKEN_ID -DHAS_GEN_HIERARCHY     -DHAS_ADD_PRAGMA_KERNEL -DHAS_FINAL_CODE_GEN -DHAS_DS_SCOPE -DHAS_DS_RESOURCE_EVAL -DHAS_DS_TILING     -DHAS_DS_SKELETON_EXTRACT -DHAS_LINE_BUFFER -o CMakeFiles/mars_rose.dir/locations.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/rose/locations.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -DLINUX_COMMANDS -DHAS_DS_MARK     -DHAS_SYSTOLIC_FRONTEND -DHAS_SYSTOLIC_EXTRACT -DHAS_DS_LOOP_PARALLEL     -DHAS_LOOP_PARALLEL -DHAS_MARS_IR     -DHAS_STREAM_IR -DHAS_MEMORY_BURST -DHAS_LOWER_CPP     -DHAS_DEPENDENCY_RESOLVE     -DHAS_LOWER_SEPARATE -DHAS_COARSE_PIPELINE -DHAS_COARSE_PARALLEL     -DHAS_COARSE_PIPELINE_ALTERA -DHAS_DS_PIPELINE -DHAS_BITWIDTH_OPT     -DHAS_DS_BITWIDTH_OPT -DHAS_REDUCTION -DHAS_REDUCTION_GENERAL     -DHAS_PROGRAM_ANALYSIS -DHAS_ID_UPDATE -DHAS_PREPROCESS     -DHAS_FUNCTION_INLINE -DHAS_AUTO_FUNC_INLINE     -DHAS_AUTO_DIM_INTERCHANGE     -DHAS_KERNEL_WRAPPER -DHAS_KERNEL_PRAGMA_GEN     -DHAS_LOOP_TILING -DHAS_ALTERA_PREPROCESS     -DHAS_MEMORY_REDUCE -DHAS_MIDEND_PREPROCESS -DHAS_ALTERA_POSTPROCESS     -DHAS_STRUCT_DECOMPOSE  -DHAS_COMM_OPT  -DHAS_ARRAY_LINEARIZE     -DHAS_KERNEL_SEPARATE -DHAS_POSTWRAP_PROCESS -DHAS_MEMORY_PARTITION     -DHAS_PERFORMANCE_ESTIMATION -DHAS_GEN_TOKEN_ID -DHAS_GEN_HIERARCHY     -DHAS_ADD_PRAGMA_KERNEL -DHAS_FINAL_CODE_GEN -DHAS_DS_SCOPE -DHAS_DS_RESOURCE_EVAL -DHAS_DS_TILING     -DHAS_DS_SKELETON_EXTRACT -DHAS_LINE_BUFFER -o CMakeFiles/mars_rose.dir/report.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/rose/report.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -DLINUX_COMMANDS -DHAS_DS_MARK     -DHAS_SYSTOLIC_FRONTEND -DHAS_SYSTOLIC_EXTRACT -DHAS_DS_LOOP_PARALLEL     -DHAS_LOOP_PARALLEL -DHAS_MARS_IR     -DHAS_STREAM_IR -DHAS_MEMORY_BURST -DHAS_LOWER_CPP     -DHAS_DEPENDENCY_RESOLVE     -DHAS_LOWER_SEPARATE -DHAS_COARSE_PIPELINE -DHAS_COARSE_PARALLEL     -DHAS_DS_PIPELINE -DHAS_BITWIDTH_OPT     -DHAS_DS_BITWIDTH_OPT -DHAS_REDUCTION -DHAS_REDUCTION_GENERAL     -DHAS_PROGRAM_ANALYSIS -DHAS_ID_UPDATE -DHAS_PREPROCESS     -DHAS_FUNCTION_INLINE -DHAS_AUTO_FUNC_INLINE     -DHAS_AUTO_DIM_INTERCHANGE     -DHAS_KERNEL_WRAPPER -DHAS_KERNEL_PRAGMA_GEN     -DHAS_LOOP_TILING -DHAS_ALTERA_PREPROCESS     -DHAS_MEMORY_REDUCE -DHAS_MIDEND_PREPROCESS -DHAS_ALTERA_POSTPROCESS     -DHAS_STRUCT_DECOMPOSE  -DHAS_COMM_OPT  -DHAS_ARRAY_LINEARIZE     -DHAS_KERNEL_SEPARATE -DHAS_POSTWRAP_PROCESS -DHAS_MEMORY_PARTITION     -DHAS_PERFORMANCE_ESTIMATION -DHAS_GEN_TOKEN_ID -DHAS_GEN_HIERARCHY     -DHAS_ADD_PRAGMA_KERNEL -DHAS_FINAL_CODE_GEN -DHAS_DS_SCOPE -DHAS_DS_RESOURCE_EVAL -DHAS_DS_TILING     -DHAS_DS_SKELETON_EXTRACT -DHAS_LINE_BUFFER -DHAS_CHANNEL_PARTITION  -o CMakeFiles/mars_opt_org.dir/src/mars_opt.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/mars_opt/src/mars_opt.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/mars_opt_utils.dir/src/mars_opt_utils.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/mars_opt/src/mars_opt_utils.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/mars_opt_utils.dir/src/mars_preproc.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/mars_opt/src/mars_preproc.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/mars_opt_utils.dir/src/order_vector_gen.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/mars_opt/src/order_vector_gen.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/AddPragmaKernel.dir/src/add_pragma_kernel.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/add_pragma_kernel/src/add_pragma_kernel.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/AlteraPostprocess.dir/src/altera_postprocess.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/altera_postprocess/src/altera_postprocess.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/AlteraPreprocess.dir/src/altera_preprocess.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/altera_preprocess/src/altera_preprocess.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/ArrayLinearize.dir/src/array_linearize.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/array_linearize/src/array_linearize.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/ArrayDelinearize.dir/src/array_delinearize.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/array_delinearize/src/array_delinearize.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/AutoDimInterchange.dir/src/auto_dim_interchange.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/auto_dim_interchange/src/auto_dim_interchange.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/AutoFuncInline.dir/src/auto_func_inline.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/auto_func_inline/src/auto_func_inline.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/AutoParallelInsertion.dir/src/auto_parallel_insertion.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/auto_parallel_insertion/src/auto_parallel_insertion.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/BitwidthOpt.dir/src/bitwidth_opt.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/bitwidth_opt/src/bitwidth_opt.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/BitwidthOpt.dir/src/memory_coalescing_intel.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/bitwidth_opt/src/memory_coalescing_intel.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/BitwidthOpt.dir/src/memory_coalescing_xilinx.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/bitwidth_opt/src/memory_coalescing_xilinx.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/CoarseParallel.dir/src/coarse_parallel.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/coarse_parallel/src/coarse_parallel.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/CoarsePipeline.dir/src/coarse_pipeline.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/coarse_pipeline/src/coarse_pipeline.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/CommOpt.dir/src/channel_gen.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/comm_opt/src/channel_gen.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/CommOpt.dir/src/channel_size.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/comm_opt/src/channel_size.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/CommOpt.dir/src/comm_check.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/comm_opt/src/comm_check.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/CommOpt.dir/src/comm_dead_remove.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/comm_opt/src/comm_dead_remove.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/CommOpt.dir/src/comm_opt.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/comm_opt/src/comm_opt.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/CommOpt.dir/src/comm_refine.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/comm_opt/src/comm_refine.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/CommOpt.dir/src/comm_rename.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/comm_opt/src/comm_rename.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/CommOpt.dir/src/comm_sync.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/comm_opt/src/comm_sync.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/CommOpt.dir/src/comm_type.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/comm_opt/src/comm_type.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/CommOpt.dir/src/false_data_dep.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/comm_opt/src/false_data_dep.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/CommOpt.dir/src/reorder.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/comm_opt/src/reorder.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/CommOpt.dir/src/shared_mem_gen.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/comm_opt/src/shared_mem_gen.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/CommOpt.dir/src/coarse_pipeline_altera.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/comm_opt/src/coarse_pipeline_altera.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/ConstantPropagation.dir/src/constant_propagate.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/constant_propagate/src/constant_propagate.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/DataTransferGen.dir/src/data_transfer_gen.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/data_transfer_gen/src/data_transfer_gen.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/DetectNonStaticPointer.dir/src/detect_non_static_pointer.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/detect_non_static_pointer/src/detect_non_static_pointer.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/DetectPointerComparison.dir/src/detect_pointer_compare.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/detect_pointer_comparison/src/detect_pointer_compare.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/DetectPointerTypeCast.dir/src/detect_pointer_type_cast.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/detect_pointer_type_cast/src/detect_pointer_type_cast.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/DetectMultiDimPointer.dir/src/detect_multidim_pointer.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/detect_multidim_pointer/src/detect_multidim_pointer.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/FinalCodeGen.dir/src/final_code_gen.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/final_code_gen/src/final_code_gen.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/FinalCodeGen.dir/src/stream_update.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/final_code_gen/src/stream_update.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/FunctionInline.dir/src/function_inline.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/function_inline/src/function_inline.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/GenHierarchy.dir/src/gen_hierarchy_top.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/gen_hierarchy/src/gen_hierarchy_top.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/GenTokenId.dir/src/gen_token_id_top.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/gen_token_id/src/gen_token_id_top.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/GenAccessRangeIntrisic.dir/src/gen_access_range_intrinsic.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/gen_access_range_intrinsic/src/gen_access_range_intrinsic.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/IdUpdate.dir/src/id_update.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/id_update/src/id_update.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/Ir.dir/src/analPragmas.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/ir/src/analPragmas.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/Ir.dir/src/bsuGroup.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/ir/src/bsuGroup.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/Ir.dir/src/bsuNode.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/ir/src/bsuNode.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/Ir.dir/src/bsuNode_v2.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/ir/src/bsuNode_v2.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/Ir.dir/src/mars_ir.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/ir/src/mars_ir.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/Ir.dir/src/mars_ir_v2.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/ir/src/mars_ir_v2.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/Ir.dir/src/mars_ir_test.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/ir/src/mars_ir_test.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/InputChecker.dir/src/input_checker.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/input_checker/src/input_checker.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/InterfaceBoolConvert.dir/src/interface_convert_bool.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/interface_convert_bool/src/interface_convert_bool.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/InterfacePortRenaming.dir/src/interface_port_renaming.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/interface_port_renaming/src/interface_port_renaming.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/InterfaceTransform.dir/src/interface_transform.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/interface_transform/src/interface_transform.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/KernelPragmaGen.dir/src/kernel_pragma_gen.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/kernel_pragma_gen/src/kernel_pragma_gen.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/KernelSeparate.dir/src/kernel_separate.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/kernel_separate/src/kernel_separate.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/KernelSeparate.dir/src/pool_visit.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/kernel_separate/src/pool_visit.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/KernelWrapper.dir/src/kernel_wrapper.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/kernel_wrapper/src/kernel_wrapper.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/LoopFlatten.dir/src/loop_flatten.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/loop_flatten/src/loop_flatten.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/LoopParallel.dir/src/loop_parallel.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/loop_parallel/src/loop_parallel.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/LoopTiling.dir/src/loop_tiling.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/loop_tiling/src/loop_tiling.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/LowerCpp.dir/src/lower_cpp.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/lower_cpp/src/lower_cpp.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/LowerSeparate.dir/src/lower_separate.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/lower_separate/src/lower_separate.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/MemoryBurst.dir/src/memory_burst.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/memory_burst/src/memory_burst.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/MemoryBurst.dir/src/memory_burst_cg.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/memory_burst/src/memory_burst_cg.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/MemoryBurst.dir/src/memory_burst_cg_v2.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/memory_burst/src/memory_burst_cg_v2.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/MemoryPartition.dir/src/math_gcd.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/memory_partition/src/math_gcd.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/MemoryPartition.dir/src/memory_partition.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/memory_partition/src/memory_partition.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/MemoryPartition.dir/src/parallel_analysis.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/memory_partition/src/parallel_analysis.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/ChannelPartition.dir/src/channel_partition.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/channel_partition/src/channel_partition.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/MemoryReduce.dir/src/memory_reduce.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/memory_reduce/src/memory_reduce.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/MidendPreprocess.dir/src/midend_preprocess.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/midend_preprocess/src/midend_preprocess.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/DependencyResolve.dir/src/dependency_resolve.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/dependency_resolve/src/dependency_resolve.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/StreamPrefetch.dir/src/stream_prefetch.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/stream_prefetch/src/stream_prefetch.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/StreamPrefetch.dir/src/stream_prefetch_xilinx.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/stream_prefetch/src/stream_prefetch_xilinx.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/PerformanceEstimation.dir/src/performance_estimation.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/performance_estimation/src/performance_estimation.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/PerformanceEstimation.dir/src/intel_module.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/performance_estimation/src/intel_module.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/PerformanceEstimation.dir/src/fast_dse.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/performance_estimation/src/fast_dse.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/PostwrapProcess.dir/src/postwrap_process.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/postwrap_process/src/postwrap_process.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/SynthesisCheck.dir/src/synthesis_check.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/synthesis_check/src/synthesis_check.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/Preprocess.dir/src/preprocess.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/preprocess/src/preprocess.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/ProgramAnalysis.dir/src/program_analysis_test.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/program_analysis/src/program_analysis_test.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/Reduction.dir/src/reduction.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/reduction/src/reduction.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/ReductionGeneral.dir/src/reduction_general.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/reduction_general/src/reduction_general.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/RemoveSimplePointerAlias.dir/src/remove_simple_pointer_alias.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/remove_simple_pointer_alias/src/remove_simple_pointer_alias.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/ReplaceExpVisitor.dir/src/replace_exp_visitor.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/replace_exp_visitor/src/replace_exp_visitor.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/SimpleDCE.dir/src/simple_dce.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/simple_dce/src/simple_dce.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/StreamModel.dir/src/stream_ir.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/stream_model/src/stream_ir.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/StreamModel.dir/src/stream_ir_more.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/stream_model/src/stream_ir_more.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/StructDecompose.dir/src/struct_decompose.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/struct_decompose/src/struct_decompose.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/StructuralFuncInline.dir/src/structural_func_inline.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/structural_func_inline/src/structural_func_inline.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/LineBuffer.dir/src/line_buffer.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/line_buffer/src/line_buffer.cpp",
-build/compile_commands.json:  "command": "/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//llvm7.0.0/bin/clang++   -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/boost_1_67/include -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/ir -I/home/hhu/WORK/Merlin_Compiler/trunk/legacy/tools/parsers/src -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/include -I/home/hhu/WORK/Merlin_Compiler/trunk/mars-gen/lib/flexlm -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rose/include/rose -I/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib/rapidjson  -Wall -Wno-c++17-extensions -DBUILD_VERSION=\"\\\".\"\\\" -DBUILD_DATE=\"\\\"Fri May 14 07:45:25 PDT 2021\"\\\" --gcc-toolchain=/home/hhu/WORK/Merlin_Compiler/trunk/source-opt/lib//gcc4.9.4 -DPROJDEBUG=1 -std=c++14 -O3   -o CMakeFiles/DetectLibraryCalls.dir/src/detect_library_calls.cpp.o -c /home/hhu/WORK/Merlin_Compiler/trunk/source-opt/tools/detect_library_calls/src/detect_library_calls.cpp",
-dist/make-dist.sh:cp -r $dir/../flexlm/falcon/distribution/lin64/ merlin/license
-make_dist.pl:    run_command "rm -rf $dist_dir/mars-gen/lib/flexlm/license.*";
-mars-gen/tools/mars_flow/CMakeLists.txt:    "${ESLOPT_TOP}/../flexlm")
-mars-gen/tools/mars_flow/CMakeLists.txt:    "${ESLOPT_TOP}/../flexlm")
-mars-gen/tools/mrefactor/mrefactor.cpp:    add_include_dir(merlin_path + "/mars-gen/lib/flexlm");
-source-opt/tools/CMakeLists.txt:    "${MARS_GEN_TOP}/lib/flexlm"
-source-opt/tools/auto_parallel_insertion/CMakeLists.txt:#    "${PROJECT_SOURCE_DIR}/flexlm")
-source-opt/tools/mars_opt/CMakeLists.txt:#include_directories("${PROJECT_SOURCE_DIR}/flexlm")
-source-opt/tools/mars_opt/CMakeLists.txt:#    "${PROJECT_SOURCE_DIR}/flexlm")
-source-opt/tools/mars_opt/src/Makefile.am:    -I$(mars_build_dir)/lib/flexlm \
-source-opt/tools/mars_opt/src/Makefile.am:FLMDIR = ${mars_build_dir}/lib/flexlm
diff --git a/trunk/source-opt/tools/CMakeLists.txt b/trunk/source-opt/tools/CMakeLists.txt
index 9662ff6..f7380b4 100644
--- a/trunk/source-opt/tools/CMakeLists.txt
+++ b/trunk/source-opt/tools/CMakeLists.txt
@@ -29,11 +29,8 @@ add_subdirectory(detect_non_static_pointer)
 add_subdirectory(detect_pointer_comparison)
 add_subdirectory(detect_pointer_type_cast)
 add_subdirectory(detect_multidim_pointer)
-#add_subdirectory(data_reuse)
-#add_subdirectory(data_stream)
 add_subdirectory(final_code_gen)
 add_subdirectory(function_inline)
-#add_subdirectory(function_outline)
 add_subdirectory(gen_hierarchy)
 add_subdirectory(gen_token_id)
 add_subdirectory(gen_access_range_intrinsic)
@@ -46,7 +43,6 @@ add_subdirectory(interface_transform)
 add_subdirectory(kernel_pragma_gen)
 add_subdirectory(kernel_separate)
 add_subdirectory(kernel_wrapper)
-#add_subdirectory(loop_distribute)
 add_subdirectory(loop_flatten)
 add_subdirectory(loop_parallel)
 add_subdirectory(loop_tiling)
@@ -55,13 +51,9 @@ add_subdirectory(lower_separate)
 add_subdirectory(memory_burst)
 add_subdirectory(memory_partition)
 add_subdirectory(channel_partition)
-add_subdirectory(memory_reduce)
 add_subdirectory(midend_preprocess)
-#add_subdirectory(msg_test)
 add_subdirectory(dependency_resolve)
 add_subdirectory(stream_prefetch)
-#add_subdirectory(opencl_transfer_gen)
-#add_subdirectory(openmp_parse)
 add_subdirectory(performance_estimation)
 add_subdirectory(postwrap_process)
 add_subdirectory(synthesis_check)
diff --git a/trunk/source-opt/tools/array_delinearize/src/array_delinearize.cpp b/trunk/source-opt/tools/array_delinearize/src/array_delinearize.cpp
index 423a5bc..d68aaa1 100644
--- a/trunk/source-opt/tools/array_delinearize/src/array_delinearize.cpp
+++ b/trunk/source-opt/tools/array_delinearize/src/array_delinearize.cpp
@@ -92,12 +92,11 @@ template <typename T> void print(vector<T> vec, string leadingStr) {
 
 int analysis_delinearize(CSageCodeGen *ast, void *array_init, int dim,
                          vector<size_t> *dim_split_steps,
-                         map<void *, size_t> *mapAlias2BStep,
-                         bool altera_flow) {
+                         map<void *, size_t> *mapAlias2BStep) {
   CMarsExpression offset(ast, 0);
   bool is_simple = true;
   return analysis_delinearize(ast, array_init, dim, dim_split_steps,
-                              mapAlias2BStep, altera_flow, &is_simple, &offset,
+                              mapAlias2BStep, &is_simple, &offset,
                               nullptr);
 }
 
@@ -108,7 +107,7 @@ int analysis_delinearize(CSageCodeGen *ast, void *array_init, int dim,
 //         e.g. dim_split_steps (1, 8, 256) -> array dim [org_size/256][32][8]
 int analysis_delinearize(CSageCodeGen *ast, void *array_init, int dim,
                          vector<size_t> *dim_split_steps,
-                         map<void *, size_t> *mapAlias2BStep, bool altera_flow,
+                         map<void *, size_t> *mapAlias2BStep,
                          bool *is_simple, void *offset, void *scope) {
   DEFINE_START_END;
   STEMP(start);
@@ -149,10 +148,6 @@ int analysis_delinearize(CSageCodeGen *ast, void *array_init, int dim,
 
     org_dim_size = tt_size[type_dim - 1 - dim_idx_org];
 
-    //  ZP: 20170309, I comment it out for unification
-    //  if (!altera_flow && tt_size[0] < 64)
-    //  return 0; //  DO NOT convert for small arrays
-
     DEL_ALGO("type_dim: " + my_itoa(type_dim));
     for (auto ele : tt_size) {
       DEL_ALGO("type dim size on i-th dim: " + my_itoa(ele));
@@ -1635,66 +1630,12 @@ int local_array_delinearization(CSageCodeGen *codegen, void *pTopFunc,
   if (!options.get_option_key_value("-a", "naive_hls").empty()) {
     return 0;
   }
-  bool xilinx_flow = false;
-  if ("sdaccel" != options.get_option_key_value("-a", "impl_tool")) {
-    xilinx_flow = true;
-  }
 
   size_t j;
   map<void *, int> map_array;  //  the array to transform
 
   //  1. get the arrays to transform
   //
-#if 0
-  //  Array of interests:
-  //  a. it is local declared (not func_arg or global var)
-  //  b0. Xilinx: it has reference in the loops with pragma
-  //  b1. Altera: it has reference in the kernel (wider than Xilinx)
-  CMarsIr::iterator it;
-  for (it = mars_ir.ir_list.begin(); it != mars_ir.ir_list.end(); ++it) {
-    CMirNodeSet new_MirNodeSet = *it;
-    for (int i = 0; i < new_MirNodeSet.size(); i++) {
-      CMirNode *new_node = new_MirNodeSet[i];
-
-      //  ZP: 20170310: do not differentiate Xilinx and Altera
-      if (all_nodes_set.count(new_node) <= 0)
-        continue;
-
-      //  if (!altera_flow && !new_node->has_opt_pragmas())
-      //    continue;
-      //
-      //  //ZP: 20170307: host function needs to be excluded from the mars_ir
-      //  //( v2 has excluded host functions)
-      //  if (altera_flow && all_nodes_set.count(new_node) <= 0)
-      //    continue;
-      void *scope = new_node->ref;
-
-      int nLine = codegen->GetFileInfo_line(codegen->_pa(scope));
-      string sFile = codegen->GetFileInfo_filename(codegen->_pa(scope), 1);
-#if PROJDEBUG
-      cout << "  ---- Loop [" << sFile << ":" << nLine << "] "
-        << codegen->_p(codegen->_pa(scope)) << endl;
-#endif
-      vector<void *> vec_ref;
-      codegen->GetNodesByType(scope, "preorder", "SgVarRefExp", &vec_ref);
-      for (j = 0; j < vec_ref.size(); j++) {
-        void *sg_ref = vec_ref[j];
-        void *sg_array = codegen->GetVariableInitializedName(sg_ref);
-        if (codegen->IsLocalInitName(sg_array) &&
-            codegen->IsArrayType(codegen->GetTypebyVar(sg_array))) {
-          void *curr_func = codegen->TraceUpByTypeCompatible(
-              sg_array, V_SgFunctionDeclaration);
-          map<void *, bool> res;
-          if (curr_func &&
-              !mars_ir.any_trace_is_bus(codegen, curr_func, sg_array,
-                &res)) {
-            map_array[sg_array] = 1;
-          }
-        }
-      }
-    }
-  }
-#endif
 
   CMarsIrV2 mars_ir;
   mars_ir.build_mars_ir(codegen, pTopFunc);
@@ -1740,7 +1681,7 @@ int local_array_delinearization(CSageCodeGen *codegen, void *pTopFunc,
       map<void *, size_t> mapAlias2BStep;
 
       analysis_delinearize(codegen, one_array, dimIdx, &dim_split_steps,
-                           &mapAlias2BStep, xilinx_flow);
+                           &mapAlias2BStep);
       if (apply_delinearize(codegen, one_array, dimIdx, dim_split_steps,
                             &mapAlias2BStep) == 0) {
         continue;
diff --git a/trunk/source-opt/tools/bitwidth_opt/CMakeLists.txt b/trunk/source-opt/tools/bitwidth_opt/CMakeLists.txt
index b2a78a8..137e198 100644
--- a/trunk/source-opt/tools/bitwidth_opt/CMakeLists.txt
+++ b/trunk/source-opt/tools/bitwidth_opt/CMakeLists.txt
@@ -1,6 +1,5 @@
 add_library(BitwidthOpt
     "${CMAKE_CURRENT_SOURCE_DIR}/src/bitwidth_opt.cpp"
-    "${CMAKE_CURRENT_SOURCE_DIR}/src/memory_coalescing_intel.cpp"
     "${CMAKE_CURRENT_SOURCE_DIR}/src/memory_coalescing_xilinx.cpp"
 )
 
diff --git a/trunk/source-opt/tools/bitwidth_opt/src/bitwidth_opt.cpp b/trunk/source-opt/tools/bitwidth_opt/src/bitwidth_opt.cpp
index 525fde8..82896b8 100644
--- a/trunk/source-opt/tools/bitwidth_opt/src/bitwidth_opt.cpp
+++ b/trunk/source-opt/tools/bitwidth_opt/src/bitwidth_opt.cpp
@@ -34,18 +34,7 @@ extern int auto_coalescing_preproces_top(CSageCodeGen *codegen, void *pTopFunc,
                                          const CInputOptions &options);
 
 int bitwidth_opt_top(CSageCodeGen *codegen, void *pTopFunc,
-                     const CInputOptions &options) {
-  string tool_type = options.get_option_key_value("-a", "impl_tool");
-  if (tool_type == "aocl") {
-    MemoryCoalescingIntel btwopt(codegen, pTopFunc, options);
-    auto_coalescing_preproces_top(codegen, pTopFunc, options);
-    return static_cast<int>(btwopt.run());
-  }
-
-  if (tool_type == "sdaccel") {
-    MemoryCoalescingXilinx btwopt(codegen, pTopFunc, options);
-    return static_cast<int>(btwopt.run());
-  }
-
-  return 0;
+    const CInputOptions &options) {
+  MemoryCoalescingXilinx btwopt(codegen, pTopFunc, options);
+  return static_cast<int>(btwopt.run());
 }
diff --git a/trunk/source-opt/tools/coarse_parallel/src/coarse_parallel.cpp b/trunk/source-opt/tools/coarse_parallel/src/coarse_parallel.cpp
index 31b37ce..0a5b4aa 100644
--- a/trunk/source-opt/tools/coarse_parallel/src/coarse_parallel.cpp
+++ b/trunk/source-opt/tools/coarse_parallel/src/coarse_parallel.cpp
@@ -216,14 +216,7 @@ void *duplicate_read_only_data(CSageCodeGen *codegen, void *port,
 
 int coarse_parallel_top(CSageCodeGen *codegen, void *pTopFunc,
                         const CInputOptions &options) {
-  if ("aocl" == options.get_option_key_value("-a", "impl_tool")) {
-    return coarse_parallel_intel_top(codegen, pTopFunc, options);
-  }
-  if ("sdaccel" == options.get_option_key_value("-a", "impl_tool")) {
-    return coarse_parallel_xilinx_top(codegen, pTopFunc, options);
-  }
-  assert(0 && "Cannot support the flow");
-  return 0;
+  return coarse_parallel_xilinx_top(codegen, pTopFunc, options);
 }
 
 int coarse_parallel_xilinx_top(CSageCodeGen *codegen, void *pTopFunc,
@@ -1092,129 +1085,6 @@ bool generate_parallel_xilinx(CSageCodeGen *codegen, CMarsIr *mars_ir,
   return true;
 }
 
-int contains_channel_access(CSageCodeGen *codegen, CMirNode *node) {
-  void *scope = node->ref;
-  vector<void *> vec_calls;
-  codegen->GetNodesByType(scope, "preorder", "SgFunctionCallExp", &vec_calls,
-                          true /*compatible*/, true /*cross function */,
-                          true /*keep original */);
-  for (auto call : vec_calls) {
-    if (codegen->is_altera_channel_call(call) != 0) {
-      return 1;
-    }
-    if (codegen->is_merlin_channel_call(call) != 0) {
-      return 1;
-    }
-  }
-  return 0;
-}
-
-int coarse_parallel_intel_top(CSageCodeGen *codegen, void *pTopFunc,
-                              const CInputOptions &options) {
-  //  1. construct mars ir
-  CMarsIr mars_ir;
-  mars_ir.get_mars_ir(codegen, pTopFunc, options, true);
-  CMarsIrV2 mars_ir_v2;
-  mars_ir_v2.build_mars_ir(codegen, pTopFunc);
-
-  CStreamIR stream_ir(codegen, options, &mars_ir, &mars_ir_v2);
-  stream_ir.ParseStreamModel();
-
-  //  2. collect coarse grained parallel loops
-  std::cout << "==============================================" << std::endl;
-  std::cout << "-----=# Coarse Parallel Optimization Start#=----\n";
-  std::cout << "==============================================" << std::endl;
-  int naive_tag = 0;
-
-  if (!options.get_option_key_value("-a", "naive_hls").empty()) {
-    naive_tag = 1;
-    cout << "[MARS-PARALLEL-MSG] Naive HLS mode.\n";
-  }
-  //  burst instance
-  MemoryBurst burst_instance(codegen, pTopFunc, options, false);
-  bool Changed = true;
-  bool LocalChanged = false;
-  int iterative_tag = 0;
-  set<void *> visited_loops;
-  do {
-    LocalChanged = false;
-
-    //  Change the order of applying CGPara, using mars ir topological order
-    vector<CMirNode *> vec_nodes;
-    mars_ir.get_topological_order_nodes(&vec_nodes);
-
-    for (size_t j = 0; j < vec_nodes.size(); j++) {
-      CMirNode *node = vec_nodes[j];
-      if (!node->is_function && node->is_complete_unroll(true)) {
-#ifdef RPOJDEBUG
-        cout << "[TESTING] BSU node is: " << node->unparseToString() << endl;
-        cout << endl << "[TESTING] Children list " << endl;
-        cout << "[TESTING] BSU node is:" << node->is_fine_grain
-             << " unroll:" << node->is_complete_unroll(true)
-             << " has_loop: " << node->has_loop << " \n"
-             << node->unparseToString() << endl;
-#endif
-        void *for_loop = codegen->GetParent(node->ref);
-        void *func = codegen->TraceUpToFuncDecl(for_loop);
-        if (stream_ir.is_port_kernel(func)) {
-          continue;
-        }
-        if (visited_loops.count(for_loop) > 0) {
-          continue;
-        }
-        visited_loops.insert(for_loop);
-        if (!node->is_fine_grain) {
-          if (naive_tag != 0) {
-            // TODO(youxiang):
-            continue;
-          }
-          if (generate_parallel_intel(codegen, &mars_ir, &stream_ir, node,
-                                      &burst_instance)) {
-            cout << "[MARS-PARALLEL-MSG] Coarse-grained parallel is applied."
-                 << endl;
-            LocalChanged = true;
-            Changed = true;
-            break;
-          }
-          cout << "[MARS-PARALLEL-MSG] Coarse-grained parallel isn't "
-                  "applied."
-               << endl;
-          if (contains_channel_access(codegen, node) != 0) {
-            cout << "[MARS-PARALLEL-MSG] cannot remove parallel pragma "
-                    "because of channel access"
-                 << endl;
-            continue;
-          }
-          remove_parallel_pragma(codegen, node);
-          continue;
-        }
-        cout << "[MARS-CGPAP-MSG] The target loop is a fine-grained loop."
-             << endl;
-
-        std::cout << "============================================"
-                  << std::endl;
-      }
-    }
-
-    if (LocalChanged) {
-      mars_ir.clear();
-      codegen->reset_func_decl_cache();
-      codegen->reset_func_call_cache();
-      codegen->init_defuse_range_analysis();
-      mars_ir.get_mars_ir(codegen, pTopFunc, options, true);
-      stream_ir.clear();
-      stream_ir.ParseStreamModel();
-    }
-    iterative_tag++;
-  } while (LocalChanged);
-
-  std::cout << "============================================" << std::endl;
-  std::cout << "-----=# Coarse Parallel Optimization End#=----\n";
-  std::cout << "============================================" << std::endl
-            << std::endl;
-  return static_cast<int>(Changed);
-}
-
 bool generate_copy_in_out(CSageCodeGen *codegen, void *array, void *scope,
                           int read_only, MemoryBurst *burst_instance) {
   vector<void *> vec_refs;
@@ -1346,311 +1216,3 @@ bool generate_copy_in_out(CSageCodeGen *codegen, void *array, void *scope,
   codegen->PrependChild(inner_body, copy_assign_stmt);
   return true;
 }
-
-bool generate_parallel_intel(CSageCodeGen *codegen, CMarsIr *mars_ir,
-                             CStreamIR *stream_ir, CMirNode *node,
-                             MemoryBurst *burst_instance) {
-  //  3. outline paralleled sub kernel
-  void *loop_body = node->ref;
-
-  void *for_loop = codegen->GetParent(loop_body);
-
-  void *func_decl = codegen->TraceUpToFuncDecl(loop_body);
-  string loop_label = codegen->get_internal_loop_label(for_loop);
-  string loop_msg = loop_label;
-  void *iter = codegen->GetLoopIterator(for_loop);
-  if (iter) {
-    loop_msg = codegen->UnparseToString(iter);
-  }
-  string func_name = codegen->GetFuncName(func_decl);
-  string loop_info = '\'' + loop_msg + "\' " +
-                     getUserCodeFileLocation(codegen, for_loop, true) +
-                     " in function \'" + func_name + "\'";
-
-  if (!check_valid_coarse_grained_loop(codegen, for_loop, loop_info, true)) {
-    return false;
-  }
-
-  void *lb;
-  void *ub;
-  void *step;
-  lb = ub = step = nullptr;
-  bool included_ub = false;
-  codegen->IsCanonicalForLoop(for_loop, nullptr, &lb, &ub, &step, nullptr,
-                              nullptr, &included_ub);
-  CMarsExpression me_lb(lb, codegen);
-  CMarsExpression me_ub(ub, codegen);
-  CMarsExpression me_step(step, codegen);
-  int64_t trip_count = 0;
-  codegen->get_loop_trip_count(for_loop, &trip_count);
-
-  map<string, string> message;
-  vector<void *> vec_refs;
-
-  codegen->GetNodesByType(loop_body, "preorder", "SgVarRefExp", &vec_refs);
-
-  map<void *, set<void *>> var2refs;
-  for (auto ref : vec_refs) {
-    void *var_init = codegen->GetVariableInitializedName(ref);
-    //  20180718: YX, skip debug variables, such as  '__PRETTY_FUNCTION__'
-    if (codegen->IsCompilerGenerated(var_init)) {
-      continue;
-    }
-    var2refs[var_init].insert(ref);
-  }
-
-  set<void *> ports;
-  map<void *, enum access_type> port2access_type;
-  map<void *, int> port2para_dim;
-  set<void *> dead_ports;
-  map<void *, vector<void *>> port2offset_indices;
-  //  check whether there is external memory access
-  //  collect port information
-  //  collect parallelism information for on-chip buffer
-  set<void *> external_ports;
-  for (auto var_ref_pair : var2refs) {
-    auto var = var_ref_pair.first;
-    auto refs = var_ref_pair.second;
-    void *var_type = codegen->GetTypebyVar(var);
-    map<void *, bool> res;
-    if (mars_ir->any_trace_is_bus(codegen, func_decl, var, &res) &&
-        ((codegen->IsArrayType(var_type) != 0) ||
-         (codegen->IsPointerType(var_type) != 0))) {
-      ArrayRangeAnalysis mr(var, codegen, loop_body, loop_body, false, false);
-      if ((mr.has_read() != 0) || (mr.has_write() != 0)) {
-        string port_name = codegen->GetVariableName(var);
-        auto arg_user_info = getUserCodeInfo(codegen, var);
-        if (!arg_user_info.name.empty()) {
-          port_name = arg_user_info.name;
-        }
-        string port_info =
-            "\'" + port_name + "\' (" + arg_user_info.file_location + ")";
-        external_ports.insert(var);
-#if PROJDEBUG
-        cout << "external memory access on port \'" << codegen->_p(var)
-             << "\'. Quit Coarse grained parallel." << endl;
-#endif
-        message["coarse_grained_parallel"] = "off";
-        message["coarse_grained_parallel_off_reason"] =
-            "only canonical "
-            "for-statement without external memory access is supported";
-        insertMessage(codegen, for_loop, message);
-        dump_critical_message(CGPAR_WARNING_1(loop_info, port_info));
-      } else {
-        ports.insert(var);
-        dead_ports.insert(var);
-      }
-      continue;
-    }
-
-    void *var_decl = codegen->GetVariableDecl(var);
-    if ((codegen->is_located_in_scope(var_decl, loop_body) != 0) ||
-        codegen->IsMemberVariable(var)) {
-      continue;
-    }
-
-    ports.insert(var);
-
-    //  analyze read/write access
-
-    bool is_array = codegen->IsArrayType(var_type) != 0;
-    if (!is_array) {
-      int write = 0;
-      for (auto ref : refs) {
-        write |= codegen->is_write_conservative(ref, false);
-      }
-      port2access_type[var] = static_cast<enum access_type>(write << 1);
-    } else {
-      ArrayRangeAnalysis mr(var, codegen, loop_body, loop_body, false, false);
-      set<int> para_dims;
-      vector<CMarsRangeExpr> vec_union_range;
-
-      if ((mr.has_write() != 0) && (mr.has_read() != 0)) {
-        vec_union_range =
-            RangeUnioninVector(mr.GetRangeExprWrite(), mr.GetRangeExprRead());
-      } else if (mr.has_write() != 0) {
-        vec_union_range = mr.GetRangeExprWrite();
-      } else if (mr.has_read() != 0) {
-        vec_union_range = mr.GetRangeExprRead();
-      } else {
-        dead_ports.insert(var);
-        continue;
-      }
-
-      vector<void *> offset_indices;
-      int dim = 1;
-      for (auto one_range : vec_union_range) {
-        if (one_range.is_single_access()) {
-          CMarsExpression index = one_range.get_lb(0);
-          offset_indices.push_back(index.get_expr_from_coeff());
-          map<void *, int64_t> iterators;
-          map<void *, int64_t> invariants;
-          if (index.IsStandardForm(for_loop, &iterators, &invariants)) {
-            if (iterators.size() == 1 && iterators.count(for_loop) > 0 &&
-                invariants.empty()) {
-              port2para_dim[var] = dim;
-              port2offset_indices[var] = offset_indices;
-              if (static_cast<size_t>(dim) == vec_union_range.size() &&
-                  (mr.has_write() != 0)) {
-                port2access_type[var] = WRITE;
-              }
-              break;
-            }
-          }
-
-        } else {
-          //  the leftmost dimension should be the same
-          break;
-        }
-        dim++;
-      }
-    }
-  }
-
-  if (!external_ports.empty()) {
-    return false;
-  }
-
-  bool all_local_buf_partitioned = true;
-  bool has_data_dependence = false;
-  string diagnosis_info;
-  string port_info;
-  for (auto port : ports) {
-    void *type = codegen->GetTypebyVar(port);
-    string port_name = codegen->GetVariableName(port);
-    auto arg_user_info = getUserCodeInfo(codegen, port);
-    if (!arg_user_info.name.empty()) {
-      port_name = arg_user_info.name;
-    }
-
-    if ("::merlin_stream" == codegen->_up(type) ||
-        "merlin_stream" == codegen->_up(type)) {
-      continue;
-    }
-
-    if (codegen->IsArrayType(type) != 0) {
-      if (dead_ports.count(port) <= 0 && port2para_dim.count(port) <= 0) {
-        diagnosis_info +=
-            "on-chip buffer \'" + port_name + "\' cannot be partitioned\n";
-        all_local_buf_partitioned = false;
-        port_info +=
-            "\'" + port_name + "\' (" + arg_user_info.file_location + ")\n";
-      }
-    } else {
-      if ((port2access_type[port] & WRITE) != 0) {
-        diagnosis_info +=
-            "on-chip scalar \'" + port_name + "\' has data dependence\n";
-        has_data_dependence = true;
-        port_info +=
-            "\'" + port_name + "\' (" + arg_user_info.file_location + ")\n";
-      }
-    }
-  }
-
-  if (!all_local_buf_partitioned || has_data_dependence) {
-#if PROJDEBUG
-    cout << "Quit coarse grained parallel on loop " + loop_info << endl;
-    cout << diagnosis_info;
-#endif
-    message["coarse_grained_parallel"] = "off";
-    message["coarse_grained_parallel_off_reason"] =
-        "only canonical for-statement "
-        "without data dependence is supported";
-    insertMessage(codegen, for_loop, message);
-    dump_critical_message(CGPAR_WARNING_2(loop_info, port_info));
-    return false;
-  }
-
-  //  YX: 20170618 handle copy-in/out
-  set<string> copy_in_vars;
-  set<string> copy_out_vars;
-  auto pragma_info = node->get_parallel_pragma();
-  string copy_in_str = pragma_info.get_attribute(CMOST_copy_in);
-  vector<string> vec_copy_in = str_split(copy_in_str, ',');
-  copy_in_vars.insert(vec_copy_in.begin(), vec_copy_in.end());
-  string copy_out_str = pragma_info.get_attribute(CMOST_copy_out);
-  vector<string> vec_copy_out = str_split(copy_out_str, ',');
-  copy_out_vars.insert(vec_copy_out.begin(), vec_copy_out.end());
-
-  if ((static_cast<unsigned int>(!copy_in_vars.empty()) != 0U) ||
-      (static_cast<unsigned int>(!copy_out_vars.empty()) != 0U)) {
-    set<void *> copy_in_ports;
-    set<void *> copy_out_ports;
-    for (auto port : ports) {
-      string var_name = codegen->GetVariableName(port);
-      for (auto copy_in_var : copy_in_vars) {
-        if (copy_in_var == var_name ||
-            var_name.find(copy_in_var + "_buf") == 0) {
-          copy_in_ports.insert(port);
-          break;
-        }
-      }
-      if (copy_in_ports.count(port) > 0) {
-        continue;
-      }
-      for (auto copy_out_var : copy_out_vars) {
-        if (copy_out_var == var_name ||
-            var_name.find(copy_out_var + "_buf") == 0) {
-          copy_out_ports.insert(port);
-          break;
-        }
-      }
-    }
-
-    for (auto port : copy_in_ports) {
-      generate_copy_in_out(codegen, port, loop_body, 1, burst_instance);
-    }
-    for (auto port : copy_out_ports) {
-      generate_copy_in_out(codegen, port, loop_body, 0, burst_instance);
-    }
-
-    codegen->init_defuse_range_analysis();
-  }
-  vector<void *> copy_pragma;
-  for (size_t i = 0; i < node->pragma_table.size(); i++) {
-    auto decl = node->pragma_table[i];
-    copy_pragma.push_back(codegen->CopyStmt(decl));
-    codegen->RemoveStmt(decl);
-  }
-  node->pragma_table.clear();
-
-  string err_msg;
-  CStreamNode *s_node = stream_ir->SpawnNodeFromAST(loop_body, &err_msg);
-  if (s_node != nullptr) {
-    //  add parallel attribute
-    s_node->set_attribute(PRAGMA_PARALLEL_FACTOR_ATTRIBUTE,
-                          my_itoa(trip_count));
-    s_node->update_pragma();
-#if PROJDEBUG
-    cout << "apply coarse grained parallel on loop " + loop_info << endl;
-#endif
-    message["coarse_grained_parallel"] = "on";
-    message["coarse_grained_parallel_factor"] = my_itoa(trip_count);
-    insertMessage(codegen, for_loop, message);
-    dump_critical_message(CGPAR_INFO_1(loop_info));
-    void *new_loop_body = codegen->GetLoopBody(for_loop);
-
-    for (auto one_pragma : copy_pragma) {
-      codegen->PrependChild(new_loop_body, one_pragma);
-    }
-    return true;
-  }
-  for (auto one_pragma : copy_pragma) {
-    codegen->DeleteNode(one_pragma);
-  }
-  message["coarse_grained_parallel"] = "off";
-  message["coarse_grained_parallel_off_reason"] = err_msg;
-  insertMessage(codegen, for_loop, message);
-
-  dump_critical_message(CGPAR_WARNING_10(loop_info, err_msg));
-
-  if (contains_channel_access(codegen, node) != 0) {
-    cout << "[MARS-PARALLEL-MSG] cannot remove parallel pragma because of "
-            "channel access"
-         << endl;
-    for (auto one_pragma : copy_pragma) {
-      codegen->PrependChild(loop_body, one_pragma);
-    }
-  }
-  return false;
-}
diff --git a/trunk/source-opt/tools/include/array_delinearize.h b/trunk/source-opt/tools/include/array_delinearize.h
index 6db438d..fb33ab0 100644
--- a/trunk/source-opt/tools/include/array_delinearize.h
+++ b/trunk/source-opt/tools/include/array_delinearize.h
@@ -28,12 +28,11 @@
 #include "program_analysis.h"
 int analysis_delinearize(CSageCodeGen *ast, void *array_init, int dim,
                          std::vector<size_t> *dim_split_steps,
-                         std::map<void *, size_t> *mapAlias2BStep,
-                         bool altera_flow);
+                         std::map<void *, size_t> *mapAlias2BStep);
 int analysis_delinearize(CSageCodeGen *ast, void *array_init, int dim,
                          std::vector<size_t> *dim_split_steps,
                          std::map<void *, size_t> *mapAlias2BStep,
-                         bool altera_flow, bool *is_simple, void *offset,
+                         bool *is_simple, void *offset,
                          void *scope);
 void analysis_delinearize_postproc_alias_offset(
     CSageCodeGen *ast, void *array_init, int dim_idx, void *scope,
diff --git a/trunk/source-opt/tools/include/codegen.h b/trunk/source-opt/tools/include/codegen.h
index f3d0dbb..fee4354 100644
--- a/trunk/source-opt/tools/include/codegen.h
+++ b/trunk/source-opt/tools/include/codegen.h
@@ -303,7 +303,7 @@ class CSageCodeGen {
   void *GetOriginalNode(void *sg_node);
   /********* VARIABLE *****************/
   /**** Get variable info *****/
-  std::vector<std::string> GetOpenCLName(bool is_intel = false);
+  std::vector<std::string> GetOpenCLName();
   void *GetVariableSymbol(void *sg_var_ref_);  //  NOT SUGGESTED, needreview
   void *GetVariableInitializedName(void *sg_var_ref_decl) const;
   void *GetVariableDefinition(void *decl_, void *name_ = nullptr);
@@ -509,9 +509,6 @@ class CSageCodeGen {
   bool is_xilinx_channel_read(void *call, void **ref);
   bool is_xilinx_channel_write(void *call, void **ref);
   bool is_xilinx_channel_access(void *call, string member_name, void **ref);
-  int is_altera_channel_read(void *ref);
-  int is_altera_channel_write(void *ref);
-  int is_altera_channel_call(void *call);
   int is_merlin_channel_read(void *ref);
   int is_merlin_channel_write(void *ref);
   int is_merlin_channel_call(void *call);
@@ -841,7 +838,7 @@ class CSageCodeGen {
 
   void GetPointerInStruct(void *struct_type, vector<void *> *vec_pointer);
   int ContainsUnSupportedType(void *sg_type_, void **unsupported_type,
-                              std::string *reason, bool intel_flow,
+                              std::string *reason,
                               bool is_return = false,
                               std::string *string_type = nullptr,
                               bool has_array_pointer_parent = false);
diff --git a/trunk/source-opt/tools/include/mars_ir.h b/trunk/source-opt/tools/include/mars_ir.h
index 68597f0..322d4af 100644
--- a/trunk/source-opt/tools/include/mars_ir.h
+++ b/trunk/source-opt/tools/include/mars_ir.h
@@ -35,7 +35,7 @@ typedef std::map<SgInitializedName *, vector<SgPragmaDeclaration *>>
 
 class CMarsIr {
  public:
-  enum flow_type { XILINX_HLS = 1, XILINX_SDX = 2, INTEL_AOCL = 3 };
+  enum flow_type { XILINX_HLS = 1, XILINX_SDX = 2};
 
  private:
   set<void *> kernel_decl;
diff --git a/trunk/source-opt/tools/include/mars_ir_v2.h b/trunk/source-opt/tools/include/mars_ir_v2.h
index f088f97..5583149 100644
--- a/trunk/source-opt/tools/include/mars_ir_v2.h
+++ b/trunk/source-opt/tools/include/mars_ir_v2.h
@@ -37,7 +37,6 @@
 enum effort { LOW = 0, STANDARD = 1, MEDIUM = 2, HIGH = 3 };
 enum tool_type {
   XILINX_SDX = 0,
-  INTEL_SDK = 1,
 };
 class CMarsIrV2 {
   std::set<void *> mKernelTops;  //  top level user kernel function declaration
@@ -45,7 +44,6 @@ class CMarsIrV2 {
       mKernel2Pragma;  //  the task pragma associated with the kernel if any
   std::set<void *>
       mAllKernelFuncs;  //  all the kernel functions and kernel subfunctions
-  std::set<void *> mAlteraChannels;
   std::set<void *> mSharedPorts;
   std::vector<CMarsNode *> mIrNodes;  //  MarsIR nodes
   std::map<pair<void *, bool>, map<void *, bool>> m_port_is_bus;
@@ -115,7 +113,6 @@ class CMarsIrV2 {
 
   bool is_shared_port(void *sg_init_name);
 
-  bool is_altera_channel(void *port);
 
   std::set<void *> get_all_shared_ports() { return mSharedPorts; }
 
@@ -217,8 +214,6 @@ class CMarsIrV2 {
 
   void remove_all_pragmas();
 
-  void convert_false_dep_pragmas(tool_type tt);
-
   bool remove_writeonly_shared_local_ports();
 
   //  ZP: 20160910
@@ -277,7 +272,6 @@ class CMarsIrV2 {
     return mIrEdges[node0][node1][port];
   }
 
-  void collect_altera_channels(const std::vector<void *> &all_funcs);
 
   bool check_identical_indices(const std::set<void *> &refs);
 
diff --git a/trunk/source-opt/tools/include/memory_burst.h b/trunk/source-opt/tools/include/memory_burst.h
index 5564f10..8e99d52 100644
--- a/trunk/source-opt/tools/include/memory_burst.h
+++ b/trunk/source-opt/tools/include/memory_burst.h
@@ -60,7 +60,6 @@ class MemoryBurst {
   long double mLiftingRatio;
   bool mNaive_tag;
   bool mMemcpy_inline;
-  bool mAltera_flow;
   bool m_report_out_of_resource;
   enum effort mEffort;
   size_t m_length_threshold;
@@ -92,7 +91,7 @@ class MemoryBurst {
   MemoryBurst(CSageCodeGen *codegen, void *pTopFunc,
               const CInputOptions &options, bool report)
       : m_ast(codegen), mTopFunc(pTopFunc), mOptions(options),
-        mNaive_tag(false), mMemcpy_inline(false), mAltera_flow(false),
+        mNaive_tag(false), mMemcpy_inline(false),
         m_report_out_of_resource(!report), mEffort(STANDARD),
         m_length_threshold(1024),
         m_wide_bus_length_lower_threshold(WIDE_BUS_LENGTH_THRESHOLD),
diff --git a/trunk/source-opt/tools/include/struct_decompose.h b/trunk/source-opt/tools/include/struct_decompose.h
index 9c0bcb2..4b388bd 100644
--- a/trunk/source-opt/tools/include/struct_decompose.h
+++ b/trunk/source-opt/tools/include/struct_decompose.h
@@ -74,8 +74,6 @@ class StructDecompose {
   //  decomposed fields
   std::map<void *, std::vector<void *>> mVar2Members;
   bool mErrorOut;
-  bool mXilinx_flow;
-  bool mIntel_flow;
   bool m_aligned_struct_decomp;
   bool mOpenCL_flow;
   std::set<std::string> mCheckedIdentifier;
@@ -97,25 +95,19 @@ class StructDecompose {
   StructDecompose(CSageCodeGen *codegen, void *pTopFunc,
                   const CInputOptions &option)
       : m_ast(codegen), mTopFunc(pTopFunc), mOptions(option),
-        mCheckDimensionSize(true) {
-    mXilinx_flow = option.get_option_key_value("-a", "impl_tool") == "sdaccel";
-    mIntel_flow = option.get_option_key_value("-a", "impl_tool") == "aocl";
-    if (mIntel_flow) {
-      mOpenCL_flow = true;
-    } else {
-      string tool_version = option.get_option_key_value("-a", "tool_version");
-      if (tool_version == "vivado_hls" || tool_version == "vitis_hls") {
-        mOpenCL_flow = false;
-      } else {
-        mOpenCL_flow = true;
+      mCheckDimensionSize(true) {
+        string tool_version = option.get_option_key_value("-a", "tool_version");
+        if (tool_version == "vivado_hls" || tool_version == "vitis_hls") {
+          mOpenCL_flow = false;
+        } else {
+          mOpenCL_flow = true;
+        }
+        m_aligned_struct_decomp =
+          option.get_option_key_value("-a", "aligned_struct_decomp") != "off";
+        if (option.get_option_key_value("-a", "ignore_unknown_dim") != "")
+          mCheckDimensionSize = false;
+        init();
       }
-    }
-    m_aligned_struct_decomp =
-        option.get_option_key_value("-a", "aligned_struct_decomp") != "off";
-    if (option.get_option_key_value("-a", "ignore_unknown_dim") != "")
-      mCheckDimensionSize = false;
-    init();
-  }
 
   void init();
 
@@ -267,18 +259,16 @@ class StructDecompose {
 
   bool donotDecomposeCompoundType(void *base_type) {
     std::string class_type = m_ast->GetTypeNameByType(base_type, true);
-    if (mXilinx_flow) {
-      if (class_type.find("ap_int") == 0 || class_type.find("ap_uint") == 0 ||
-          class_type.find("ap_fixed") == 0 ||
-          class_type.find("ap_ufixed") == 0 || class_type.find("hls::") == 0 ||
-          class_type.find("complex") == 0 ||
-          class_type.find("std::complex") == 0)
-        return true;
-      if (!class_type.empty() &&
-          m_ast->IsStructureWithAlignedScalarData(base_type) &&
-          !m_aligned_struct_decomp)
-        return true;
-    }
+    if (class_type.find("ap_int") == 0 || class_type.find("ap_uint") == 0 ||
+        class_type.find("ap_fixed") == 0 ||
+        class_type.find("ap_ufixed") == 0 || class_type.find("hls::") == 0 ||
+        class_type.find("complex") == 0 ||
+        class_type.find("std::complex") == 0)
+      return true;
+    if (!class_type.empty() &&
+        m_ast->IsStructureWithAlignedScalarData(base_type) &&
+        !m_aligned_struct_decomp)
+      return true;
 
     if (class_type.find("merlin_stream") != std::string::npos)
       return true;
diff --git a/trunk/source-opt/tools/input_checker/src/input_checker.cpp b/trunk/source-opt/tools/input_checker/src/input_checker.cpp
index 1b5f895..98e9cd7 100644
--- a/trunk/source-opt/tools/input_checker/src/input_checker.cpp
+++ b/trunk/source-opt/tools/input_checker/src/input_checker.cpp
@@ -157,7 +157,7 @@ bool InputChecker::CheckOpenclConflictName() {
   printf("    Enter check opencl conflict name...\n\n");
   bool is_intel = mAltera_flow;
   int ret = 0;
-  vector<string> OpenCLNameConflict = codegen->GetOpenCLName(is_intel);
+  vector<string> OpenCLNameConflict = codegen->GetOpenCLName();
   //  Check all function name and argument name
   vector<void *> all_decls;
   codegen->GetNodesByType_compatible(nullptr, "SgFunctionDeclaration",
@@ -496,8 +496,7 @@ void InputChecker::CheckKernelArgument(void *pKernelTop) {
     }
     void *unsupported_type = nullptr;
     string reason;
-    if (codegen->ContainsUnSupportedType(sg_type, &unsupported_type, &reason,
-                                         mAltera_flow) != 0) {
+    if (codegen->ContainsUnSupportedType(sg_type, &unsupported_type, &reason) != 0) {
       string detail =
           "Top function argument \'" + codegen->UnparseToString(arg) + "' " +
           getUserCodeFileLocation(codegen, arg, true) + " with type \'" +
@@ -531,7 +530,7 @@ void InputChecker::CheckKernelArgument(void *pKernelTop) {
   string reason;
   string string_type;
   if (codegen->ContainsUnSupportedType(sg_type, &unsupported_type, &reason,
-                                       mAltera_flow, true, &string_type) != 0) {
+                                       &string_type) != 0) {
     string msg = "Cannot support the kernel interface port:";
     if (string_type == "") {
       string_type = codegen->UnparseToString(unsupported_type);
diff --git a/trunk/source-opt/tools/ir/src/bsuNode_v2.cpp b/trunk/source-opt/tools/ir/src/bsuNode_v2.cpp
index 44d8f48..b50ebb8 100644
--- a/trunk/source-opt/tools/ir/src/bsuNode_v2.cpp
+++ b/trunk/source-opt/tools/ir/src/bsuNode_v2.cpp
@@ -63,21 +63,21 @@ void CMarsNode::update_reference() {
     if (loop_init != nullptr) {
       vector<void *> sub_refs;
       m_ast->GetNodesByType_int(loop_init, "preorder", V_SgVarRefExp,
-                                &sub_refs);
+          &sub_refs);
       all_refs.insert(sub_refs.begin(), sub_refs.end());
     }
     void *loop_test = m_ast->GetLoopTest(loop);
     if (loop_test != nullptr) {
       vector<void *> sub_refs;
       m_ast->GetNodesByType_int(loop_test, "preorder", V_SgVarRefExp,
-                                &sub_refs);
+          &sub_refs);
       all_refs.insert(sub_refs.begin(), sub_refs.end());
     }
     void *loop_incr = m_ast->GetLoopIncrementExpr(loop);
     if (loop_incr != nullptr) {
       vector<void *> sub_refs;
       m_ast->GetNodesByType_int(loop_incr, "preorder", V_SgVarRefExp,
-                                &sub_refs);
+          &sub_refs);
       all_refs.insert(sub_refs.begin(), sub_refs.end());
     }
   }
@@ -105,7 +105,7 @@ void CMarsNode::update_reference() {
     int pointer_dim = 0;
     vector<void *> sg_indexes;
     m_ast->parse_pntr_ref_by_array_ref(var_ref, &var_init, &sg_pntr,
-                                       &sg_indexes, &pointer_dim, var_ref);
+        &sg_indexes, &pointer_dim, var_ref);
     //  filter loop iterators
     //  if (m_ast->GetLoopFromIteratorByPos(var_init, var_ref, 1) != nullptr)
     if (m_ast->GetLoopFromIteratorByPos(var_init, var_ref) != nullptr) {
@@ -116,18 +116,10 @@ void CMarsNode::update_reference() {
       var_init = top_var_init;
     }
     mPorts.insert(var_init);
-    if (m_ast->is_altera_channel_write(sg_pntr) != 0) {
-      mPort2AccessType[var_init] =
-          static_cast<access_type>(mPort2AccessType[var_init] | WRITE);
-    } else if (m_ast->is_altera_channel_read(sg_pntr) != 0) {
-      mPort2AccessType[var_init] =
-          static_cast<access_type>(mPort2AccessType[var_init] | READ);
-    } else {
-      mPort2AccessType[var_init] = static_cast<access_type>(
-          mPort2AccessType[var_init] |
-          (m_ast->has_write_conservative(sg_pntr) != 0 ? WRITE : 0) |
-          (m_ast->has_read_conservative(sg_pntr) != 0 ? READ : 0));
-    }
+    mPort2AccessType[var_init] = static_cast<access_type>(
+        mPort2AccessType[var_init] |
+        (m_ast->has_write_conservative(sg_pntr) != 0 ? WRITE : 0) |
+        (m_ast->has_read_conservative(sg_pntr) != 0 ? READ : 0));
     mPort2Pntr[var_init].insert(sg_pntr);
     mPort2Refs[var_init].insert(var_ref);
   }
@@ -459,75 +451,6 @@ set<void *> CMarsNode::get_common_ports(CMarsNode *other) {
     if (!is_real_shared_port(other, port)) {
       continue;
     }
-#if 0
-        //  FIXME: we only handle scalar variables
-        auto type = m_ast->GetTypebyVar(port);
-        if (!m_ast->IsScalarType(type)) {
-            res.insert(port);
-            continue;
-        }
-        auto ref0 = get_port_references(port);
-        auto ref1 = other->get_port_references(port);
-        bool included = false;
-        for (auto &ref : ref0) {
-            if (m_ast->is_altera_channel_read(ref) ||
-                    m_ast->is_altera_channel_write(ref)) {
-                included = true;
-                break;
-            }
-            if (!m_ast->has_read_conservative(ref)) continue;
-            //  check whether read ref defs are included in other node
-            vector<void*> vec_def = m_ast->GetVarDefbyPosition(port, ref);
-            if (vec_def.size() == 0) {
-                included = true;
-                break;
-            }
-            for (auto &def : vec_def) {
-                vector<void*> vec_refs;
-                m_ast->GetNodesByType_int(
-                    def, "preorder", V_SgVarRefExp, &vec_refs);
-                for (auto &def_ref : vec_refs) {
-                    if (m_ast->GetVariableInitializedName(def_ref) == port &&
-                            ref0.count(def_ref) <= 0 &&
-                            ref1.count(def_ref) > 0) {
-                        included = true;
-                        break;
-                    }
-                }
-                if (included) break;
-            }
-        }
-        if (included) {
-            res.insert(port);
-            continue;
-        }
-        for (auto &ref : ref1) {
-            if (!m_ast->has_read_conservative(ref)) continue;
-            vector<void*> vec_def = m_ast->GetVarDefbyPosition(port, ref);
-            if (vec_def.size() == 0) {
-                included = true;
-                break;
-            }
-            for (auto &def : vec_def) {
-                vector<void*> vec_refs;
-                m_ast->GetNodesByType_int(
-                    def, "preorder", V_SgVarRefExp, &vec_refs);
-                for (auto &def_ref : vec_refs) {
-                    if (m_ast->GetVariableInitializedName(def_ref) == port &&
-                            ref0.count(def_ref) > 0 &&
-                            ref1.count(def_ref) <= 0) {
-                        included = true;
-                        break;
-                    }
-                }
-                if (included) break;
-            }
-        }
-        if (included) {
-            res.insert(port);
-            continue;
-        }
-#endif
     res.insert(port);
   }
   return res;
@@ -759,40 +682,6 @@ void CMarsNode::remove_all_statements(bool keep_assert_stmt) {
   }
   mStmts = vec_stmts;
 }
-#if 0
-vector<CMarsRangeExpr> CMarsNode::get_port_access_union(void * port) {
-    auto refs = get_port_refs(port);
-    CMarsAST_IF *ast = get_ast();
-
-    vector<CMarsRangeExpr> range;
-    if (ast->IsScalarType(ast->GetTypebyVar(port)))
-      return range;
-    vector<void*> vec_pos(refs.begin(), refs.end());
-    void *common_scope = ast->GetCommonScope(vec_pos);
-    if (common_scope) {
-      vector<void*> vec_refs;
-      ast->get_ref_in_scope(port, common_scope, &vec_refs);
-      set<void*> all_refs(vec_refs.begin(), vec_refs.end());
-      if (all_refs == refs) {
-        CMarsArrayRangeInScope acc(
-            port, ast, common_scope, get_user_kernel(), false, false);
-        if (acc.has_read())
-          range = RangeUnioninVector(range, acc.GetRangeExprRead());
-        if (acc.has_write())
-          range = RangeUnioninVector(range, acc.GetRangeExprWrite());
-        return range;
-      }
-    }
-    for (auto ref : refs) {
-        CMarsArrayRangeInScope acc(ref, ast, get_user_kernel(), false, false);
-        vector<CMarsRangeExpr> one_range = acc.has_read() ?
-              acc.GetRangeExprRead() : acc.GetRangeExprWrite();
-
-        range = RangeUnioninVector(range, one_range);
-    }
-    return range;
-}
-#endif
 
 int get_sync_level_from_schedule(CMarsScheduleVector sch0,
                                  CMarsScheduleVector sch1) {
diff --git a/trunk/source-opt/tools/ir/src/mars_ir.cpp b/trunk/source-opt/tools/ir/src/mars_ir.cpp
index 96a97a1..853e697 100644
--- a/trunk/source-opt/tools/ir/src/mars_ir.cpp
+++ b/trunk/source-opt/tools/ir/src/mars_ir.cpp
@@ -98,7 +98,7 @@ bool CMarsIr::is_bus_port(CSageCodeGen *codegen, void *func_decl,
   // have MM interfaces) 3) for both 1) and 2), we need to consider some ports
   // with interface pragmas 4) for non m_axi ports, we shouldn't do burst,
   // streaming, or coalescing
-  if (m_flow == XILINX_SDX || m_flow == INTEL_AOCL) {
+  if (m_flow == XILINX_SDX) {
     if (!interface.empty()) {
       for (auto one_interface : interface) {
         if (HLS_GLOBAL_MEM_MODE.count(one_interface) > 0 ||
@@ -138,9 +138,7 @@ void CMarsIr::get_mars_ir(CSageCodeGen *codegen, void *pTopFunc,
   clear();
 
   string tool_type = options.get_option_key_value("-a", "impl_tool");
-  if (tool_type == "aocl") {
-    m_flow = INTEL_AOCL;
-  } else if (tool_type == "sdaccel") {
+  if (tool_type == "sdaccel") {
     string tool_version = options.get_option_key_value("-a", "tool_version");
     if (tool_version == "vivado_hls" || tool_version == "vitis_hls")
       m_flow = XILINX_HLS;
diff --git a/trunk/source-opt/tools/ir/src/mars_ir_v2.cpp b/trunk/source-opt/tools/ir/src/mars_ir_v2.cpp
index 8892fc0..2aec55d 100644
--- a/trunk/source-opt/tools/ir/src/mars_ir_v2.cpp
+++ b/trunk/source-opt/tools/ir/src/mars_ir_v2.cpp
@@ -510,8 +510,6 @@ void CMarsIrV2::build_node_info(const set<void *> &unrolled_loops,
   //  4. set SSST flag for each edge
   update_ssst_flag_for_all_edges();
 
-  //  5. collect all the altera channels
-  collect_altera_channels(topo_funcs);
 }
 
 bool CMarsIrV2::every_trace_is_bus(void *target_arr, void *pos) {
@@ -559,37 +557,6 @@ bool CMarsIrV2::any_trace_is_bus(void *target_arr, void *pos) {
   return true;
 }
 
-//  bool CMarsIrV2::is_altera_channel(void *port) {
-//  return mAlteraChannels.count(port) > 0;
-//  }
-
-void CMarsIrV2::collect_altera_channels(const vector<void *> &all_funcs) {
-  assert(m_ast);
-  for (auto func : all_funcs) {
-    void *func_body = m_ast->GetFuncBody(func);
-    if (func_body == nullptr) {
-      continue;
-    }
-    vector<void *> vec_refs;
-    m_ast->GetNodesByType_int(func_body, "preorder", V_SgVarRefExp, &vec_refs);
-    for (auto &ref : vec_refs) {
-      void *sg_pntr = nullptr;
-      void *var_init = nullptr;
-      int pointer_dim = 0;
-      vector<void *> sg_indexes;
-      m_ast->parse_pntr_ref_by_array_ref(ref, &var_init, &sg_pntr, &sg_indexes,
-                                         &pointer_dim, ref);
-      if (sg_pntr == nullptr) {
-        continue;
-      }
-      if ((m_ast->is_altera_channel_read(sg_pntr) != 0) ||
-          (m_ast->is_altera_channel_write(sg_pntr) != 0)) {
-        mAlteraChannels.insert(var_init);
-      }
-    }
-  }
-}
-
 CMarsIrV2::~CMarsIrV2() {
   mKernelTops.clear();
   mAllKernelFuncs.clear();
@@ -1451,9 +1418,7 @@ void CMarsIrV2::get_top_loop_info(
       for (auto &port : shared_ports) {
         if (is_kernel_port(port)) {
           (*top_loop_2_ports)[loop0][port] = true;
-        } else if (mAlteraChannels.count(port) <= 0) {
-          (*top_loop_2_ports)[loop0][port] = false;
-        }
+        } 
       }
       for (auto &port : orig_ports) {
         if (is_kernel_port(port)) {
@@ -2709,34 +2674,6 @@ bool CMarsIrV2::is_flatten_loop(void *loop, const set<void *> &unrolled_loops) {
   return true;
 }
 
-void CMarsIrV2::convert_false_dep_pragmas(tool_type tt) {
-  if (INTEL_SDK == tt) {
-    for (auto pragma : mPragmas) {
-      CAnalPragma ana_pragma(m_ast);
-      bool errout;
-      ana_pragma.PragmasFrontendProcessing(pragma, &errout, false);
-      if (!ana_pragma.is_false_dep()) {
-        continue;
-      }
-      void *loop = m_ast->TraceUpToForStatement(pragma);
-      if (loop == nullptr) {
-        continue;
-      }
-      string var_list = ana_pragma.get_attribute(CMOST_variable);
-      if (var_list.empty()) {
-        continue;
-      }
-      string pragma_str = "ivdep array (" + var_list + ")";
-      void *new_pragma =
-          m_ast->CreatePragma(pragma_str, m_ast->TraceUpToBasicBlock(loop));
-      m_ast->InsertStmt(new_pragma, loop);
-    }
-  } else {
-    fprintf(stderr, "Please enhance to support other platform");
-    assert(0);
-  }
-}
-
 void CMarsIrV2::collect_all_kernel_nodes() {
   m_var_used_by_kernel.clear();
   m_func_used_by_kernel.clear();
diff --git a/trunk/source-opt/tools/line_buffer/src/line_buffer.cpp b/trunk/source-opt/tools/line_buffer/src/line_buffer.cpp
index 4d39261..5c44d43 100644
--- a/trunk/source-opt/tools/line_buffer/src/line_buffer.cpp
+++ b/trunk/source-opt/tools/line_buffer/src/line_buffer.cpp
@@ -680,7 +680,7 @@ int LineBuffer::check_delinearize_availability(
     vector<size_t> *delinear_arr_size) {
   map<void *, size_t> mapAlias2BStep;
   int ret = analysis_delinearize(m_ast, sg_array, 0, dim_split_steps,
-                                 &mapAlias2BStep, true);
+                                 &mapAlias2BStep);
   if (ret != 0) {
     check_only_delinearize(m_ast, sg_array, 0, *dim_split_steps,
                            &mapAlias2BStep, mapIndex2Delinear,
diff --git a/trunk/source-opt/tools/loop_parallel/src/loop_parallel.cpp b/trunk/source-opt/tools/loop_parallel/src/loop_parallel.cpp
index 3fe7c6b..2ecbe93 100644
--- a/trunk/source-opt/tools/loop_parallel/src/loop_parallel.cpp
+++ b/trunk/source-opt/tools/loop_parallel/src/loop_parallel.cpp
@@ -561,7 +561,6 @@ int LoopParallel::parse_pragma_intel() {
     }
   }
 
-  mMars_ir_v2.convert_false_dep_pragmas(INTEL_SDK);
   mMars_ir_v2.build_mars_ir(m_ast, mTopFunc, false, false);
   mMars_ir_v2.remove_all_pragmas();
 
diff --git a/trunk/source-opt/tools/mars_opt/CMakeLists.txt b/trunk/source-opt/tools/mars_opt/CMakeLists.txt
index 7510f29..d4d896c 100644
--- a/trunk/source-opt/tools/mars_opt/CMakeLists.txt
+++ b/trunk/source-opt/tools/mars_opt/CMakeLists.txt
@@ -37,7 +37,7 @@ set_target_properties(mars_opt_org PROPERTIES
     -DHAS_AUTO_DIM_INTERCHANGE \
     -DHAS_KERNEL_WRAPPER -DHAS_KERNEL_PRAGMA_GEN \
     -DHAS_LOOP_TILING -DHAS_ALTERA_PREPROCESS \
-    -DHAS_MEMORY_REDUCE -DHAS_MIDEND_PREPROCESS -DHAS_ALTERA_POSTPROCESS \
+    -DHAS_MIDEND_PREPROCESS -DHAS_ALTERA_POSTPROCESS \
     -DHAS_STRUCT_DECOMPOSE  -DHAS_COMM_OPT  -DHAS_ARRAY_LINEARIZE \
     -DHAS_KERNEL_SEPARATE -DHAS_POSTWRAP_PROCESS -DHAS_MEMORY_PARTITION \
     -DHAS_PERFORMANCE_ESTIMATION -DHAS_GEN_TOKEN_ID -DHAS_GEN_HIERARCHY \
@@ -93,8 +93,6 @@ target_link_libraries(mars_opt_org
   MemoryPartition
   ChannelPartition
   MidendPreprocess
-  MemoryReduce
-  # MsgTest
   DependencyResolve
   StreamPrefetch
   PerformanceEstimation
diff --git a/trunk/source-opt/tools/mars_opt/src/mars_opt.cpp b/trunk/source-opt/tools/mars_opt/src/mars_opt.cpp
index 01a2528..1e1a7e7 100644
--- a/trunk/source-opt/tools/mars_opt/src/mars_opt.cpp
+++ b/trunk/source-opt/tools/mars_opt/src/mars_opt.cpp
@@ -308,11 +308,6 @@ void init_pass_func_table() {
                            const CInputOptions &options);
   g_pass_func_table["comm_dead_remove"] = comm_dead_remove_top;
 #endif
-#ifdef HAS_MEMORY_REDUCE
-  int memory_reduce_top(CSageCodeGen * codegen, void *pTopFunc,
-                        const CInputOptions &options);
-  g_pass_func_table["memory_reduce"] = memory_reduce_top;
-#endif
 #ifdef HAS_STRUCT_DECOMPOSE
   int struct_decompose_top(CSageCodeGen * codegen, void *pTopFunc,
                            const CInputOptions &options);
diff --git a/trunk/source-opt/tools/memory_burst/CMakeLists.txt b/trunk/source-opt/tools/memory_burst/CMakeLists.txt
index f41bb4d..0c7f2ac 100644
--- a/trunk/source-opt/tools/memory_burst/CMakeLists.txt
+++ b/trunk/source-opt/tools/memory_burst/CMakeLists.txt
@@ -1,7 +1,6 @@
 add_library(MemoryBurst
     "${CMAKE_CURRENT_SOURCE_DIR}/src/memory_burst.cpp"
     "${CMAKE_CURRENT_SOURCE_DIR}/src/memory_burst_cg.cpp"
-    "${CMAKE_CURRENT_SOURCE_DIR}/src/memory_burst_cg_v2.cpp"
 )
 
 set_target_properties(MemoryBurst PROPERTIES
diff --git a/trunk/source-opt/tools/memory_burst/src/memory_burst.cpp b/trunk/source-opt/tools/memory_burst/src/memory_burst.cpp
index 5ec05a7..cdd2773 100644
--- a/trunk/source-opt/tools/memory_burst/src/memory_burst.cpp
+++ b/trunk/source-opt/tools/memory_burst/src/memory_burst.cpp
@@ -253,14 +253,6 @@ bool MemoryBurst::run() {
   //  Bug 1585
   detect_user_burst();
 
-  string tool_flow = mOptions.get_option_key_value("-a", "impl_tool");
-  if (tool_flow == "aocl") {
-    mAltera_flow = true;
-  }
-  if (mAltera_flow && mEffort > STANDARD) {
-    return process_coarse_grained_top_v2();
-  }
-
   //  1. first try to infer coarse grained burst
   process_coarse_grained_top();
 
@@ -1872,32 +1864,8 @@ bool MemoryBurst::auto_cache_for_coalescing() {
   //  build Mars IR v2
   mMars_ir_v2.build_mars_ir(m_ast, mTopFunc, false, false);
 
-  string tool_flow = mOptions.get_option_key_value("-a", "impl_tool");
-  if (tool_flow == "aocl") {
-    mAltera_flow = true;
-  }
-  //  reset mSingleBufferSize for each vendor tools
-  if (mAltera_flow) {
-    size_t threshold = INTEL_DEFAULT_REGISTER_THRESHOLD;
-    if (!mOptions.get_option_key_value("-a", "auto_register_size_threshold")
-             .empty()) {
-      threshold = my_atoi(
-          mOptions.get_option_key_value("-a", "auto_register_size_threshold"));
-    }
-    if (threshold == 0) {
-      threshold = INTEL_DEFAULT_REGISTER_THRESHOLD;
-    }
-
-    if (threshold >
-        INTEL_MAX_REGISTER_THRESHOLD) {  //  the requirement from AOCL
-      threshold = INTEL_MAX_REGISTER_THRESHOLD;
-    }
-
-    mSingleBufferSize = threshold / 8;
-  } else {
-    //  For xilinx, we use 16 x 512bits as the threshold
-    mSingleBufferSize = 512 / 8 * 16;
-  }
+  //  For xilinx, we use 16 x 512bits as the threshold
+  mSingleBufferSize = 512 / 8 * 16;
   process_fine_grained_top();
 
   std::cout << "============================================" << std::endl;
diff --git a/trunk/source-opt/tools/memory_burst/src/memory_burst_cg.cpp b/trunk/source-opt/tools/memory_burst/src/memory_burst_cg.cpp
index 551113e..e80c279 100644
--- a/trunk/source-opt/tools/memory_burst/src/memory_burst_cg.cpp
+++ b/trunk/source-opt/tools/memory_burst/src/memory_burst_cg.cpp
@@ -517,7 +517,7 @@ int MemoryBurst::cg_check_delinearize_availability(void *sg_scope,
   map<void *, size_t> mapAlias2BStep;
   bool is_simple = true;
   int ret = analysis_delinearize(m_ast, sg_array, 0, &dim_split_steps,
-                                 &mapAlias2BStep, true, &is_simple, &me_start,
+                                 &mapAlias2BStep, &is_simple, &me_start,
                                  sg_scope);
   if (is_simple) {
     return 1;
@@ -1014,38 +1014,6 @@ bool MemoryBurst::process_coarse_grained_top() {
       continue;
     }
 
-    //  Youxiang: 20180608 for Intel flow, we need to check whether the port is
-    //  streamable
-    if (mAltera_flow) {
-      void *loop_body = nullptr;
-      if (m_ast->IsForStatement(curr_scope) != 0) {
-        loop_body = m_ast->GetLoopBody(curr_scope);
-      }
-      if (loop_body != nullptr) {
-        MerlinStreamModel::CStreamIR stream_ir(m_ast, mOptions, &mMars_ir,
-                                               &mMars_ir_v2);
-        vector<CMerlinMessage> vec_msg;
-        if (stream_ir.CheckStreamPortSeparability(loop_body, &vec_msg) == 0) {
-          cout << "StreamPort is not generated: in scope "
-               << m_ast->_up(loop_body, 30) << endl;
-          string warn_info;
-          for (auto msg : vec_msg) {
-            warn_info += "  " + msg.get_message() + "\n";
-            cout << "-- " << msg.get_message() << endl;
-          }
-          warn_info = warn_info.substr(0, warn_info.size() - 1);
-          dump_critical_message(CGPAR_WARNING_14(scope_info, warn_info), 0,
-                                m_ast, curr_scope);
-          map<string, string> message;
-          message["coarse_grained_parallel"] = "off";
-          message["coarse_grained_parallel_off_reason"] =
-              "Ports access cannot be streamed";
-          insertMessage(m_ast, curr_scope, message);
-          remove_parallel_pragma(m_ast, node);
-          valid = false;
-        }
-      }
-    }
     if (valid) {
       for (auto curr_array : vec_arrays) {
         Changed |=
@@ -1359,8 +1327,7 @@ bool MemoryBurst::process_coarse_grained_top() {
         continue;
       }
 
-      if (mMars_ir.is_fine_grained_scope(m_ast, scope_to_lift) &&
-          !mAltera_flow) {
+      if (mMars_ir.is_fine_grained_scope(m_ast, scope_to_lift)) {
         void *sg_loop = m_ast->GetEnclosingNode("ForLoop", scope_to_lift);
         string qorMergeMode = getQoRMergeMode(m_ast, sg_loop);
         if (qorMergeMode != "tail") {
@@ -2332,16 +2299,6 @@ bool MemoryBurst::cg_transform_burst_for_parallel(
       void *sg_test = m_ast->GetLoopTest(sg_loop);
       void *sg_incr = m_ast->GetLoopIncrementExpr(sg_loop);
       sg_loop_body = m_ast->CreateBasicBlock();
-#if 0
-      //  unroll the loop
-      string unroll_pragma_s = std::string(HLS_PRAGMA) + " " + HLS_UNROLL;
-      if (mAltera_flow) {
-        unroll_pragma_s = std::string(ACCEL_PRAGMA) + " " + CMOST_PARALLEL +
-          " " + CMOST_complete + " " + CMOST_SKIP;
-      }
-      void *unroll_pragma = m_ast->CreatePragma(unroll_pragma_s, sg_loop_body);
-      m_ast->AppendChild(sg_loop_body, unroll_pragma);
-#endif
       // MR1620 bind the loop into interface port
       sg_loop_copy = m_ast->CreateForLoop(
           m_ast->CopyStmt(sg_init), m_ast->CopyStmt(sg_test),
diff --git a/trunk/source-opt/tools/preprocess/src/preprocess.cpp b/trunk/source-opt/tools/preprocess/src/preprocess.cpp
index 9ea5ca2..238c3d5 100644
--- a/trunk/source-opt/tools/preprocess/src/preprocess.cpp
+++ b/trunk/source-opt/tools/preprocess/src/preprocess.cpp
@@ -74,8 +74,6 @@ extern int check_const_array_size(CSageCodeGen *codegen, void *TopFunc);
 
 extern void GetTLDMInfo_withPointer4(void *sg_node, void *pArg);
 
-extern int local_static_replace_top(CSageCodeGen *codegen, void *pTopFunc);
-
 extern int constant_propagation_top(CSageCodeGen *codegen, void *pTopFunc,
                                     const CInputOptions &option,
                                     bool assert_generation);
@@ -262,14 +260,8 @@ void PreProcess::init() {
     mNaive_tag = true;
     cout << "[MARS-PARALLEL-MSG] Naive HLS mode.\n";
   }
-  if ("aocl" == mOptions.get_option_key_value("-a", "impl_tool")) {
-    mAltera_flow = true;
-    cout << "[MARS-PARALLEL-MSG] Enable altera flow mode.\n";
-  }
-  if ("sdaccel" == mOptions.get_option_key_value("-a", "impl_tool")) {
     mXilinx_flow = true;
     cout << "[MARS-PARALLEL-MSG] Enable xilinx flow mode.\n";
-  }
   if ("on" == mOptions.get_option_key_value("-a", "pure_kernel")) {
     mPure_kernel = true;
     cout << "[MARS-PARALLEL-MSG] Enable pure kernel mode.\n";
@@ -337,33 +329,11 @@ bool PreProcess::run() {
 
   //  mValid &= check_address_of_port_array(m_ast, mTopFunc);
 
-  if (mAltera_flow) {
-    if (mEffort > STANDARD) {
-      //  Yuxin: 2016Nov18
-      check_func_inline_legality(m_ast, mTopFunc);
-    }
-  }
-
   RemoveKernelFunDeclStaticModifier();
   //  //////////////////////////////////////////  /
   //  2. Checkers for C++ syntax in kernel
   //  //////////////////////////////////////////  /
   //  check_valid_top(m_ast, mTopFunc);
-  if (!mNaive_tag && mAltera_flow) {
-    if (mEffort > STANDARD) {
-      remove_dummy_return_top(m_ast, mTopFunc);
-    }
-  }
-
-  //  string tool = "Intel";
-  //  if (mAltera_flow) {
-  //    tool = "Intel";
-  //  } else {
-  //    tool = "Xilinx";
-  //  }
-  //  check_kernel_argument_number_top(m_ast, mTopFunc, tool);
-  //  check_kernel_argument_top(m_ast, mTopFunc);
-
   build_mars_ir_v2(false);
 
   //  checkMemberFunction();
@@ -375,7 +345,6 @@ bool PreProcess::run() {
   //    PostCheckLocalVariableWithNonConstantDimension();
   //  }
   //
-  //  check_opencl_conflict_name(m_ast, mTopFunc, mAltera_flow);
 
   if (!mNaive_tag) {
     map<void *, string> loop2file;
@@ -424,25 +393,6 @@ bool PreProcess::run() {
 
   Changed |= postprocessing();
 
-  if (mAltera_flow) {
-    Changed |= local_static_replace_top(m_ast, mTopFunc);
-  }
-
-  if (mAltera_flow) {
-    if (Changed) {
-      m_ast->init_defuse_range_analysis();
-    }
-    if (mEffort >= MEDIUM) {
-      build_mars_ir_v2(true);
-      check_empty_kernel();
-      check_multiple_nodes();
-      //  Yuxin: 2016Nov18
-      check_single_linear_index(m_ast, mTopFunc);
-      check_identical_indices(m_ast, mTopFunc);
-      check_comm_pre(m_ast, mTopFunc);
-    }
-  }
-
   if (!mNaive_tag) {
     parse_aggregate_init();
   }
@@ -786,21 +736,7 @@ bool PreProcess::preprocessing() {
           m_ast->AddComment("Original: #pragma " + pragmaString,
                             m_ast->GetScope(decl));
           m_ast->RemoveStmt(decl);
-        } else if (mAltera_flow) {
-          if (ana_pragma.is_parallel()) {
-            if (!ana_pragma.get_attribute(CMOST_flatten_option).empty()) {
-              unrolled_loop2pragma[loop] = decl;
-            } else {
-              vector<void *> sub_loops;
-              m_ast->GetNodesByType_int(m_ast->GetLoopBody(loop), "preorder",
-                                        V_SgForStatement, &sub_loops);
-              unrolled_loops.insert(sub_loops.begin(), sub_loops.end());
-            }
-            if (!ana_pragma.get_attribute(CMOST_exclusive_option).empty()) {
-              unrolled_loops.insert(loop);
-            }
-          }
-        }
+        } 
       }
     }
     Changed |= m_ast->simplify_pointer_access(file);
@@ -846,49 +782,6 @@ bool PreProcess::preprocessing() {
 
   mValid &= !errorOut;
 
-  //  check coarse grained paralleled loop
-  //  for altera flow
-  if (mAltera_flow && mEffort >= MEDIUM) {
-    vector<void *> coarse_grained_unroll_loops;
-    for (auto &loop_info : unrolled_loop2pragma) {
-      void *loop = loop_info.first;
-
-      vector<void *> sub_loops;
-      m_ast->GetNodesByType_int(m_ast->GetLoopBody(loop), "preorder",
-                                V_SgForStatement, &sub_loops);
-      bool has_sub_loop = false;
-      for (auto &sub_loop : sub_loops) {
-        if (unrolled_loops.count(sub_loop) <= 0) {
-          has_sub_loop = true;
-          break;
-        }
-      }
-      if (has_sub_loop) {
-        coarse_grained_unroll_loops.push_back(loop);
-      }
-    }
-    for (auto &loop : coarse_grained_unroll_loops) {
-      void *decl = unrolled_loop2pragma[loop];
-
-      string pragmaString = m_ast->GetPragmaString(decl);
-      string loop_label = m_ast->get_internal_loop_label(loop);
-
-      std::ostringstream oss;
-      oss << "\"" << pragmaString
-          << "\" " + getUserCodeFileLocation(m_ast, decl, true);
-      string pragma_info = oss.str();
-      oss.str("");
-      oss.clear();
-      oss << "\'" << loop_label << "\' "
-          << getUserCodeFileLocation(m_ast, loop, true);
-      string loop_info = oss.str();
-      dump_critical_message(PROCS_WARNING_8(pragma_info, loop_info));
-      m_ast->AddComment("Original: #pragma " + pragmaString,
-                        m_ast->GetScope(decl));
-      m_ast->RemoveStmt(decl);
-    }
-  }
-
   return Changed;
 }
 
@@ -1090,16 +983,6 @@ void PreProcess::checkNonCanonicalLoop(map<void *, string> *p_loop2file,
     //  rest non-canonical loops
 
     if (!ret1) {
-      //  FIXME: meta locationt info does not work for non-canonical loop, Yuxin
-      //  Nov 30
-      string loop_info = "\'" + str_loop + "' " + str_loc;
-      bool is_switch = false;
-      if (mAltera_flow && mEffort > STANDARD) {
-        is_switch = true;
-        system("touch merlin_altera_naive.log");
-      }
-
-      dump_critical_message(PROCS_WARNING_2(loop_info, is_switch));
     } else {
       bool has_loop_bound_spec = false;
       Rose_STL_Container<SgNode *> pragmaStmts = NodeQuery::querySubTree(
@@ -1193,16 +1076,6 @@ int PreProcess::remove_dummy_return_top(CSageCodeGen *codegen, void *pTopFunc) {
         codegen->RemoveChild(ret_stmt);
       }
     }
-    if (local_has_real_return && mEffort > STANDARD && mAltera_flow) {
-      string function_string =
-          "\'" + codegen->DemangleName(codegen->GetFuncName(func)) + "\' " +
-          getUserCodeFileLocation(m_ast, func, true);
-
-      dump_critical_message(PROCS_WARNING_10(function_string));
-    }
-  }
-  if (has_real_return) {
-    system("touch merlin_altera_naive.log");
   }
   return 0;
 }
@@ -1287,9 +1160,6 @@ void PreProcess::check_multiple_nodes() {
       break;
     }
   }
-  if (switch_low) {
-    system("touch merlin_altera_naive.log");
-  }
 }
 
 void PreProcess::check_func_inline_legality(CSageCodeGen *codegen,
@@ -1358,133 +1228,7 @@ int check_const_array_size(CSageCodeGen *codegen, void *pTopFunc) {
   return 0;
 }
 
-void PreProcess::check_single_linear_index(CSageCodeGen *codegen,
-                                           void *pTopFunc) {
-  printf("    Enter check wether if an array can be liniearized...\n\n");
-
-  //  Yuxin Nov 22 2016: just check shared port indices, host-if not included
-  //  Host interface will be check after memory burst
-
-  map<void *, int> map_array;  //  the array to transform
-
-  int node_num = mMars_ir_v2.size();
-
-  //  1. get the arrays to transform
-  for (int j = 0; j < node_num; ++j) {
-    CMarsNode *node = mMars_ir_v2.get_node(j);
-    auto s_ports = mMars_ir_v2.get_shared_ports(node);
-    for (auto &port : s_ports) {
-      if (codegen->IsLocalInitName(port) != 0) {
-        map_array[port] = 1;
-      }
-    }
-  }
-
-  //  2. transform each
-  map<void *, int>::iterator it1;
-  for (it1 = map_array.begin(); it1 != map_array.end(); it1++) {
-    void *one_array = it1->first;
-    vector<size_t> dim_split_steps;
-    map<void *, size_t> mapAlias2BStep;
-    bool is_simple = true;
-    CMarsExpression zero(codegen, 0L);
-    //  Offset by default is 0, for an index after burst might be a variable
-    int delinearized = analysis_delinearize(
-        codegen, one_array, 0, &dim_split_steps, &mapAlias2BStep, mAltera_flow,
-        &is_simple, &zero, nullptr);
-    if (!is_simple && (delinearized != 0)) {
-      map<void *, vector<CMarsExpression>> mapIndex2Delinear;
-      vector<size_t> new_array_dims;
-      delinearized = apply_delinearize(
-          codegen, one_array, 0, dim_split_steps, &mapAlias2BStep, true,
-          &is_simple, &zero, nullptr, &mapIndex2Delinear, &new_array_dims);
-      is_simple &= delinearized;
-    }
-    bool is_linear = true;
-    if (is_simple) {
-#if PROJDEBUG
-      cout << "==> simple form array: " << codegen->_p(one_array) << endl;
-#endif
-      continue;
-    }
-    if ((dim_split_steps.empty()) || (dim_split_steps.empty())) {
-      is_linear = false;
-    }
-
-    if (!is_linear && mEffort > STANDARD) {
-      string var_name = "'" + codegen->UnparseToString(one_array) + "'";
-      string var_info =
-          var_name + " " + getUserCodeFileLocation(m_ast, one_array, true);
-
-      dump_critical_message(PROCS_WARNING_26(var_info));
-      system("touch merlin_altera_naive.log");
-    }
-  }
-}
-
-void PreProcess::check_identical_indices(CSageCodeGen *codegen,
-                                         void *pTopFunc) {
-  printf("    Enter check identical indices in the loop kernels...\n\n");
-
-  int node_num = mMars_ir_v2.size();
-  map<string, int> id2msg;
-
-  for (int j = 0; j < node_num; ++j) {
-    CMarsNode *node = mMars_ir_v2.get_node(j);
-    auto ports = mMars_ir_v2.get_shared_ports(node);
-    for (auto &port : ports) {
-      set<void *> refs = node->get_port_references(port);
-      bool is_identical =
-          mMars_ir_v2.check_identical_indices_without_simple_type(refs);
-      if (!is_identical && mEffort > STANDARD) {
-        auto loops = node->get_loops();
-        string port_info = "'" + m_ast->UnparseToString(port) + "'";
-        if (!loops.empty()) {
-          void *sg_loop = loops[loops.size() - 1];
-          string str_loop = m_ast->UnparseToString(sg_loop).substr(0, 20);
-          string loop_id = codegen->get_internal_loop_label(sg_loop);
-          string loop_info = "loop '" + str_loop + "' (" + loop_id + ")" + " " +
-                             getUserCodeFileLocation(m_ast, sg_loop, true);
-          if (id2msg.find(loop_id) == id2msg.end()) {
-            dump_critical_message(PROCS_WARNING_23(port_info, loop_info));
-            id2msg[loop_id] = 1;
-            system("touch merlin_altera_naive.log");
-          }
-        } else {
-          auto stmts = node->get_stmts();
-          if (stmts.empty()) {
-            continue;
-          }
-          void *sg_stmt1 = stmts[stmts.size() - 1];
-          void *sg_stmt0 = stmts[0];
-          string str_stmt0 = m_ast->UnparseToString(sg_stmt0).substr(0, 20);
-          string str_stmt1 = m_ast->UnparseToString(sg_stmt1).substr(0, 20);
-          string stmt_info =
-              "statements '" + str_stmt0 + "' to '" + str_stmt1 + "'";
-          dump_critical_message(PROCS_WARNING_23(port_info, stmt_info));
-          system("touch merlin_altera_naive.log");
-        }
-      }
-    }
-  }
-}
-
-int PreProcess::check_comm_pre(CSageCodeGen *codegen, void *pTopFunc) {
-  printf("    Enter communication pre check ...\n\n");
 
-  int node_num = mMars_ir_v2.size();
-  bool valid = true;
-  map<void *, MarsCommOpt::mark_struct> loop2mark;
-  for (int j = 0; j < node_num; ++j) {
-    CMarsNode *node = mMars_ir_v2.get_node(j);
-    valid &= check_node(node, &loop2mark, &mMars_ir_v2, true);
-  }
-  if (!valid) {
-    system("touch merlin_altera_naive.log");
-    return 0;
-  }
-  return 1;
-}
 
 int local_static_replace(CSageCodeGen *codegen, void *func_decl,
                          set<void *> *visited) {
@@ -1598,29 +1342,9 @@ int local_static_replace(CSageCodeGen *codegen, void *func_decl,
   return static_cast<int>(Changed);
 }
 
-int local_static_replace_top(CSageCodeGen *codegen, void *pTopFunc) {
-  cout << "\n====== Local static replace ========>\n";
-
-  vector<void *> kernels = get_top_kernels(codegen, pTopFunc);
-
-  //    cout << "[print kernel:]" << kernels.size() << endl;
-
-  bool Changed = false;
-  set<void *> visited_funcs;
-  for (auto kernel_decl : kernels) {
-    if (visited_funcs.count(kernel_decl) > 0) {
-      continue;
-    }
-    visited_funcs.insert(kernel_decl);
-    Changed |= local_static_replace(codegen, kernel_decl, &visited_funcs);
-  }
-  return static_cast<int>(Changed);
-}
-
 void PreProcess::check_empty_kernel() {
   bool empty = mMars_ir_v2.get_all_nodes().empty();
   if (empty) {
-    mValidAltera = false;
     dump_critical_message(PROCS_ERROR_40);
   }
 }
@@ -1721,8 +1445,7 @@ void PreProcess::check_range_analysis() {
 }
 
 void PreProcess::check_result() {
-  if (!mValid || (mAltera_flow && !mValidAltera) ||
-      (mXilinx_flow && !mValidXilinx)) {
+  if (!mValid || (mXilinx_flow && !mValidXilinx)) {
     throw std::exception();
   }
 }
diff --git a/trunk/source-opt/tools/rose/codegen.cpp b/trunk/source-opt/tools/rose/codegen.cpp
index 479187a..783076c 100644
--- a/trunk/source-opt/tools/rose/codegen.cpp
+++ b/trunk/source-opt/tools/rose/codegen.cpp
@@ -2856,48 +2856,7 @@ bool CSageCodeGen::is_xilinx_channel_access(void *call, string member_name,
   return false;
 }
 
-int CSageCodeGen::is_altera_channel_read(void *ref) {
-  int param_index = GetFuncCallParamIndex(ref);
-  if (-1 == param_index) {
-    return 0;
-  }
-  void *sg_call = TraceUpToFuncCall(ref);
-  if (sg_call == nullptr) {
-    return 0;
-  }
-  if (0 == GetFuncNameByCall(sg_call).find("read_channel_altera")) {
-    return 1;
-  }
-  return 0;
-}
 
-int CSageCodeGen::is_altera_channel_write(void *ref) {
-  int param_index = GetFuncCallParamIndex(ref);
-  if (-1 == param_index) {
-    return 0;
-  }
-  void *sg_call = TraceUpToFuncCall(ref);
-  if (sg_call == nullptr) {
-    return 0;
-  }
-  if (0 == GetFuncNameByCall(sg_call).find("write_channel_altera") &&
-      param_index == 0) {
-    return 1;
-  }
-  return 0;
-}
-
-int CSageCodeGen::is_altera_channel_call(void *call) {
-  if (IsFunctionCall(call) == 0) {
-    return 0;
-  }
-  string func_name = GetFuncNameByCall(call);
-  if (func_name.find("read_channel_altera") == 0 ||
-      func_name.find("write_channel_altera") == 0) {
-    return 1;
-  }
-  return 0;
-}
 
 int CSageCodeGen::is_merlin_channel_call(void *call) {
   if (IsFunctionCall(call) == 0) {
@@ -6613,9 +6572,6 @@ void CSageCodeGen::get_all_func_path_in_scope_int(
 
   for (size_t i = 0; i < vec_calls.size(); i++) {
     void *sg_call = vec_calls[i];
-    if (is_altera_channel_call(sg_call) != 0) {
-      continue;
-    }
     void *sg_decl = GetFuncDeclByCall(sg_call);
     void *sg_body = GetFuncBody(sg_decl);
     if ((sg_decl != nullptr) && (sg_body != nullptr)) {
@@ -22532,7 +22488,7 @@ void CSageCodeGen::GetPointerInStruct(void *struct_type,
 
 int CSageCodeGen::ContainsUnSupportedType(void *sg_type_,
                                           void **unsupported_type,
-                                          string *reason, bool intel_flow,
+                                          string *reason,
                                           bool is_return, string *string_type,
                                           bool has_array_pointer_parent) {
   void *sg_type = GetOrigTypeByTypedef(sg_type_, true);
@@ -22609,7 +22565,7 @@ int CSageCodeGen::ContainsUnSupportedType(void *sg_type_,
 
       if (var_type != nullptr) {
         if (ContainsUnSupportedType(var_type, unsupported_type, reason,
-                                    intel_flow, is_return, string_type,
+                                    is_return, string_type,
                                     has_array_pointer_parent) != 0) {
           *unsupported_type = member;
           return 1;
@@ -22630,8 +22586,7 @@ int CSageCodeGen::ContainsUnSupportedType(void *sg_type_,
     }
     return 0;
   }
-  if (((IsIntegerType(base_type) != 0) &&
-       (!intel_flow || (IsGeneralLongLongType(base_type) == 0))) ||
+  if ((IsIntegerType(base_type) != 0) ||
       (IsFloatType(base_type) != 0) || (IsXilinxAPFixedType(base_type) != 0) ||
       (IsXilinxAPIntType(base_type) != 0) || IsComplexType(base_type) != 0) {
     return 0;
@@ -22655,8 +22610,6 @@ int CSageCodeGen::ContainsUnSupportedType(void *sg_type_,
     *reason = "union type";
   } else if (IsVoidType(base_type) != 0) {
     *reason = "void type";
-  } else if (IsGeneralLongLongType(base_type) != 0 && intel_flow) {
-    *reason = "long long type not supported by OpenCL standard";
   } else if (IsEnumType(base_type) != 0 && is_return) {
     *reason = "enum type";
   } else if (IsEnumType(base_type) != 0 &&
@@ -22921,192 +22874,9 @@ int CSageCodeGen::IsFunctionDefinition(void *sg_node) {
       isSgFunctionDefinition(static_cast<SgNode *>(sg_node)) != 0);
 }
 
-vector<string> CSageCodeGen::GetOpenCLName(bool is_intel) {
+vector<string> CSageCodeGen::GetOpenCLName() {
   vector<string> OpenCLNameConflict;
-  if (is_intel) {
-    OpenCLNameConflict = {"char2",
-                          "uchar2",
-                          "short2",
-                          "ushort2",
-                          "int2",
-                          "uint2",
-                          "long2",
-                          "ulong2",
-                          "float2",
-                          "char4",
-                          "uchar4",
-                          "short4",
-                          "ushort4",
-                          "int4",
-                          "uint4",
-                          "long4",
-                          "ulong4",
-                          "float4",
-                          "char8",
-                          "uchar8",
-                          "short8",
-                          "ushort8",
-                          "int8",
-                          "uint8",
-                          "long8",
-                          "ulong8",
-                          "float8",
-                          "char16",
-                          "uchar16",
-                          "short16",
-                          "ushort16",
-                          "int16",
-                          "uint16",
-                          "long16",
-                          "ulong16",
-                          "float16",
-                          "cl_char2",
-                          "cl_uchar2",
-                          "cl_short2",
-                          "cl_ushort2",
-                          "cl_int2",
-                          "cl_uint2",
-                          "cl_long2",
-                          "cl_ulong2",
-                          "cl_float2",
-                          "cl_char4",
-                          "cl_uchar4",
-                          "cl_short4",
-                          "cl_ushort4",
-                          "cl_int4",
-                          "cl_uint4",
-                          "cl_long4",
-                          "cl_ulong4",
-                          "cl_float4",
-                          "cl_char8",
-                          "cl_uchar8",
-                          "cl_short8",
-                          "cl_ushort8",
-                          "cl_int8",
-                          "cl_uint8",
-                          "cl_long8",
-                          "cl_ulong8",
-                          "cl_float8",
-                          "cl_char16",
-                          "cl_uchar16",
-                          "cl_short16",
-                          "cl_ushort16",
-                          "cl_int16",
-                          "cl_uint16",
-                          "cl_long16",
-                          "cl_ulong16",
-                          "cl_float16",
-                          "image2d_t",
-                          "image3d_t",
-                          "sampler_t",
-                          "event_t",
-                          "bool2",
-                          "bool4",
-                          "bool8",
-                          "bool16",
-                          "double2",
-                          "double4",
-                          "double8",
-                          "double16",
-                          "half",
-                          "half2",
-                          "half4",
-                          "half8",
-                          "half16",
-                          "quad",
-                          "quad2",
-                          "quad4",
-                          "quad8",
-                          "quad16",
-                          "complex half",
-                          "complex half2",
-                          "complex half4",
-                          "complex half8",
-                          "complex half16",
-                          "complex float",
-                          "complex float2",
-                          "complex float4",
-                          "complex float8",
-                          "complex float16",
-                          "complex double",
-                          "complex double2",
-                          "complex double4",
-                          "complex double8",
-                          "complex double16",
-                          "complex quad",
-                          "complex quad2",
-                          "complex quad4",
-                          "complex quad8",
-                          "complex quad16",
-                          "imaginary half",
-                          "imaginary half2",
-                          "imaginary half4",
-                          "imaginary half8",
-                          "imaginary half16",
-                          "imaginary float",
-                          "imaginary float2",
-                          "imaginary float4",
-                          "imaginary float8",
-                          "imaginary float16",
-                          "imaginary double",
-                          "imaginary double2",
-                          "imaginary double4",
-                          "imaginary double8",
-                          "imaginary double16",
-                          "imaginary quad",
-                          "imaginary quad2",
-                          "imaginary quad4",
-                          "imaginary quad8",
-                          "imaginary quad16",
-                          "float2x2",
-                          "float2x4",
-                          "float2x8",
-                          "float2x16",
-                          "float4x2",
-                          "float4x4",
-                          "float4x8",
-                          "float4x16",
-                          "float8x2",
-                          "float8x4",
-                          "float8x8",
-                          "float8x16",
-                          "float16x2",
-                          "float16x4",
-                          "float16x8",
-                          "float16x16",
-                          "double2x2",
-                          "double2x4",
-                          "double2x8",
-                          "double2x16",
-                          "double4x2",
-                          "double4x4",
-                          "double4x8",
-                          "double4x16",
-                          "double8x2",
-                          "double8x4",
-                          "double8x8",
-                          "double8x16",
-                          "double16x2",
-                          "double16x4",
-                          "double16x8",
-                          "double16x16",
-                          "uint64_t",
-                          "long long",
-                          "long long2",
-                          "long long4",
-                          "long long8",
-                          "long long16",
-                          "unsigned long long2",
-                          "unsigned long long4",
-                          "unsigned long long8",
-                          "unsigned long long16",
-                          "long double2",
-                          "long double4",
-                          "long double8",
-                          "long double16"};
-  } else {
-    OpenCLNameConflict = {"long double"};
-  }
+  OpenCLNameConflict = {"long double"};
   return OpenCLNameConflict;
 }
 
diff --git a/trunk/source-opt/tools/rose/locations.cpp b/trunk/source-opt/tools/rose/locations.cpp
index 0d12cd4..4df669b 100644
--- a/trunk/source-opt/tools/rose/locations.cpp
+++ b/trunk/source-opt/tools/rose/locations.cpp
@@ -84,7 +84,7 @@ bool isCompilerGenerated(CSageCodeGen *ast, SgNode *node) {
 }
 
 bool isSkippedIncludeFile(string filename) {
-  vector<string> skippedLibs = {"cmost.h", "altera_const.h",
+  vector<string> skippedLibs = {"cmost.h", 
                                 "rose_edg_required_macros_and_functions.h"};
 
   string sFilename = getSimpleFilename(filename);
diff --git a/trunk/source-opt/tools/stream_prefetch/src/stream_prefetch.cpp b/trunk/source-opt/tools/stream_prefetch/src/stream_prefetch.cpp
index 719e324..69ee0ec 100644
--- a/trunk/source-opt/tools/stream_prefetch/src/stream_prefetch.cpp
+++ b/trunk/source-opt/tools/stream_prefetch/src/stream_prefetch.cpp
@@ -31,166 +31,10 @@
 #include "mars_ir_v2.h"
 #include "mars_message.h"
 
-#include "stream_ir.h"
 #include "stream_prefetch_xilinx.h"
-// using namespace std;
-//  using namespace SageInterface;
-//  using namespace SageBuilder;
-// using namespace MarsProgramAnalysis;
-// using namespace MerlinStreamModel;
-using MerlinStreamModel::CStreamBase;
-using MerlinStreamModel::CStreamChannel;
-using MerlinStreamModel::CStreamIR;
-using MerlinStreamModel::CStreamNode;
-using MerlinStreamModel::CStreamPort;
-
-int isFuncPassByPointer(CMarsAST_IF *ast, void *access, void *funcCall) {
-  if (ast->IsFunctionCall(funcCall) == 0) {
-    return -1;
-  }
-  for (int i = 0; i < ast->GetFuncCallParamNum(funcCall); ++i) {
-    if (ast->IsInScope(access, ast->GetFuncCallParam(funcCall, i)) != 0) {
-      void *funcDecl = ast->GetFuncDeclByCall(funcCall);
-      if (funcDecl == nullptr) {
-        return -1;
-      }
-
-      void *type = ast->GetTypebyVar(ast->GetFuncParam(funcDecl, i));
-      if ((ast->IsArrayType(type) != 0) || (ast->IsReferenceType(type) != 0) ||
-          (ast->IsPointerType(type) != 0)) {
-        return i;
-      }
-      return -1;
-    }
-  }
-  return -1;
-}
-
-int getAccessTimes(CMarsAST_IF *ast, void *arg, void *scope) {
-  int times = 0;
-  for (auto access : ast->GetAllRefInScope(arg, scope)) {
-    void *call = ast->TraceUpToFuncCall(access);
-    if (ast->IsMerlinInternalIntrinsic(ast->GetFuncNameByCall(call))) {
-      continue;
-    }
-
-    int funcIndex;
-    if ((funcIndex = isFuncPassByPointer(ast, access, call)) >= 0) {
-      void *funcDecl = ast->GetFuncDeclByCall(call);
-      void *funcArg = ast->GetFuncParam(funcDecl, funcIndex);
-      times += getAccessTimes(ast, funcArg, funcDecl);
-    } else {
-      ++times;
-    }
-  }
-  return times;
-}
-
-int stream_prefetch_intel_top(CSageCodeGen *codegen, void *pTopFunc,
-                              const CInputOptions &options) {
-  CMarsAST_IF *ast = codegen;
-  CMarsIr mars_ir;
-  mars_ir.get_mars_ir(codegen, pTopFunc, options, true);
-  CMarsIrV2 mars_ir_v2;
-  mars_ir_v2.build_mars_ir(codegen, pTopFunc);
-
-  string intel_stream_prefetch =
-      options.get_option_key_value("-a", "stream_prefetch");
-  bool auto_intel_stream_prefetch = false;
-  if ("auto" == intel_stream_prefetch) {
-    auto_intel_stream_prefetch = true;
-  }
-
-  CStreamIR stream_ir(codegen, options, &mars_ir, &mars_ir_v2);
-  bool firstTime = true;
-  vector<string> vec_ports_with_multiple_accesses;
-  for (auto kernel : mars_ir_v2.get_top_kernels()) {
-    set<void *> prefetch_vars;
-    set<void *> prefetch_pragmas;
-    {
-      vector<void *> vec_pragma;
-      ast->GetNodesByType(ast->GetFuncBody(kernel), "preorder",
-                          "SgPragmaDeclaration", &vec_pragma);
-
-      for (auto arg : ast->GetFuncParams(kernel)) {
-        string arg_name = ast->GetVariableName(arg);
-        string port_info =
-            "'" + arg_name + "' " + getUserCodeFileLocation(ast, arg, true);
-        void *type = ast->GetTypebyVar(arg);
-        if ((ast->IsPointerType(type) == 0) && (ast->IsArrayType(type) == 0)) {
-          continue;
-        }
-        bool disable_stream_prefetch = false;
-        bool enable_stream_prefetch = false;
-        int access_times = getAccessTimes(ast, arg, kernel);
-        for (auto pragma : vec_pragma) {
-          CAnalPragma ana_pragma(ast);
-          bool errorout;
-          ana_pragma.PragmasFrontendProcessing(pragma, &errorout, false);
-          if (!ana_pragma.is_interface()) {
-            continue;
-          }
-          if (ana_pragma.get_attribute(CMOST_variable) == arg_name) {
-            string stream_prefetch_option =
-                ana_pragma.get_attribute(CMOST_stream_prefetch);
-            boost::algorithm::to_upper(stream_prefetch_option);
-            if (CMOST_OFF == stream_prefetch_option) {
-              disable_stream_prefetch = true;
-              continue;
-            }
-            if (CMOST_ON == stream_prefetch_option) {
-              enable_stream_prefetch = true;
-            }
-            if (!disable_stream_prefetch &&
-                (enable_stream_prefetch || auto_intel_stream_prefetch)) {
-              prefetch_pragmas.insert(pragma);
-            }
-          }
-        }
-        assert(!disable_stream_prefetch || !enable_stream_prefetch);
-        if (!disable_stream_prefetch &&
-            (enable_stream_prefetch || auto_intel_stream_prefetch)) {
-          prefetch_vars.insert(arg);
-          if (access_times > 1) {
-            vec_ports_with_multiple_accesses.push_back(port_info);
-          }
-        }
-      }
-    }
-
-    if (prefetch_vars.empty()) {
-      continue;
-    }
-
-    if (firstTime) {
-      stream_ir.ParseStreamModel();
-      firstTime = false;
-    }
-
-    string err_msg;
-    if (stream_ir.SpawnNodeFromAST(kernel, &err_msg, true, &prefetch_vars) !=
-        nullptr) {
-      for (auto pragma : prefetch_pragmas) {
-        mars_ir_v2.set_pragma_attribute(&pragma, "memory_burst", "off");
-      }
-      for (auto port_info : vec_ports_with_multiple_accesses) {
-        dump_critical_message(STREAM_WARNING_2(port_info));
-      }
-    }
-  }
-  return 1;
-}
 
 int stream_prefetch_top(CSageCodeGen *codegen, void *pTopFunc,
-                        const CInputOptions &options) {
-  string tool_type = options.get_option_key_value("-a", "impl_tool");
-  if (tool_type == "aocl") {
-    return stream_prefetch_intel_top(codegen, pTopFunc, options);
-  }
-
-  if (tool_type == "sdaccel") {
-    StreamPrefetchXilinx stream_prefetch(codegen, pTopFunc, options, false);
-    return stream_prefetch.run();
-  }
-  return 0;
+    const CInputOptions &options) {
+  StreamPrefetchXilinx stream_prefetch(codegen, pTopFunc, options, false);
+  return stream_prefetch.run();
 }
diff --git a/trunk/source-opt/tools/struct_decompose/src/struct_decompose.cpp b/trunk/source-opt/tools/struct_decompose/src/struct_decompose.cpp
index 97da0ab..3e8947d 100644
--- a/trunk/source-opt/tools/struct_decompose/src/struct_decompose.cpp
+++ b/trunk/source-opt/tools/struct_decompose/src/struct_decompose.cpp
@@ -31,7 +31,6 @@
 #include "xml_parser.h"
 #define MERLIN_ASSIGN_PREFIX "merlin_assign_"
 #define MERLIN_DECOMPOSE_SUFFIX "merlin_decompose"
-#define ALTERA_ARGUMENTS_LIMITATION 128
 #undef DEBUG
 #define DISABLE_DEBUG 1
 #if DISABLE_DEBUG
@@ -1810,16 +1809,6 @@ void *StructDecompose::removeUnusedParameters(void *func_decl) {
       total_num_arg++;
     }
   }
-  if (mTopKernel.count(func_decl) > 0) {
-    if (mIntel_flow && total_num_arg > ALTERA_ARGUMENTS_LIMITATION) {
-      string limit_msg = my_itoa(ALTERA_ARGUMENTS_LIMITATION);
-      string curr_args = "Current number of final arguments is " +
-                         my_itoa(total_num_arg) + ".\n";
-      dump_critical_message(DISAG_ERROR_3(limit_msg, curr_args));
-      mErrorOut = true;
-    }
-  }
-
   if (!has_dead_arg) {
     for (auto &&[old_arg, new_arg] : orgArg2newArg) {
       m_ast->DeleteNode(new_arg);
