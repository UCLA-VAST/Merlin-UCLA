/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class x10rose_visit_JNI */

#ifndef _Included_x10rose_visit_JNI
#define _Included_x10rose_visit_JNI
#ifdef __cplusplus
#endif
extern "C" {
/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionInsertImportedPackageOnDemand
 * Signature: (Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionInsertImportedPackageOnDemand
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionInsertImportedTypeOnDemand
 * Signature: (Ljava/lang/String;Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionInsertImportedTypeOnDemand
  (JNIEnv *, jclass, jstring, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionInsertImportedType
 * Signature: (Ljava/lang/String;Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionInsertImportedType
  (JNIEnv *, jclass, jstring, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionInsertImportedStaticField
 * Signature: (Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionInsertImportedStaticField
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionPushPackage
 * Signature: (Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionPushPackage
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionUpdatePushPackage
 * Signature: (Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionUpdatePushPackage
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionPopPackage
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionPopPackage
  (JNIEnv *, jclass);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionPushTypeScope
 * Signature: (Ljava/lang/String;Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionPushTypeScope
  (JNIEnv *, jclass, jstring, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionPopTypeScope
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionPopTypeScope
  (JNIEnv *, jclass);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionPushTypeParameterScope
 * Signature: (Ljava/lang/String;Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionPushTypeParameterScope
  (JNIEnv *, jclass, jstring, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionPopTypeParameterScope
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionPopTypeParameterScope
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionTest
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionTest
  (JNIEnv *, jclass);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionCompilationUnitList
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionCompilationUnitList
  (JNIEnv *, jclass, jint, jobjectArray);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionIsSpecifiedSourceFile
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_x10rose_visit_JNI_cactionIsSpecifiedSourceFile
  (JNIEnv *, jclass, jstring);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionEcjFatalCompilationErrors
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionEcjFatalCompilationErrors
  (JNIEnv *, jclass, jstring);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionCompilationUnitListEnd
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionCompilationUnitListEnd
  (JNIEnv *, jclass);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionSetupBasicTypes
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionSetupBasicTypes
  (JNIEnv *, jclass);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionParenthesizedExpression
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionParenthesizedExpression
  (JNIEnv *, jclass, jint);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionPackageAnnotations
 * Signature: (ILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionPackageAnnotations
  (JNIEnv *, jclass, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionCompilationUnitDeclaration
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionCompilationUnitDeclaration
  (JNIEnv *, jclass, jstring, jstring, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionCompilationUnitDeclarationEnd
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionCompilationUnitDeclarationEnd
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionCompilationUnitDeclarationError
 * Signature: (Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionCompilationUnitDeclarationError
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionTypeDeclaration
 * Signature: (Ljava/lang/String;Ljava/lang/String;IZZZZZZZZZZZLX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionTypeDeclaration
  (JNIEnv *, jclass, jstring, jstring, jint, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionTypeDeclarationHeader
 * Signature: (ZIILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionTypeDeclarationHeader
  (JNIEnv *, jclass, jboolean, jint, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionTypeDeclarationEnd
 * Signature: (jboolean, LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionTypeDeclarationEnd
  (JNIEnv *, jclass, jboolean, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionConstructorDeclaration
 * Signature: (Ljava/lang/String;ILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionConstructorDeclaration
  (JNIEnv *, jclass, jstring, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionConstructorDeclarationHeader
 * Signature: (Ljava/lang/String;ZZZIIILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionConstructorDeclarationHeader
  (JNIEnv *, jclass, jstring, jboolean, jboolean, jboolean, jint, jint, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionConstructorDeclarationEnd
 * Signature: (IILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionConstructorDeclarationEnd
  (JNIEnv *, jclass, jint, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionExplicitConstructorCall
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionExplicitConstructorCall
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionExplicitConstructorCallEnd
 * Signature: (ZZZLjava/lang/String;Ljava/lang/String;IIILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionExplicitConstructorCallEnd
  (JNIEnv *, jclass, jboolean, jboolean, jboolean, jstring, jstring, jint, jint, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionMethodDeclaration
 * Signature: (Ljava/lang/String;ILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionMethodDeclaration
  (JNIEnv *, jclass, jstring, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionMethodDeclarationHeader
 * Signature: (Ljava/lang/String;ZZZZZZZZZIIILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionMethodDeclarationHeader
  (JNIEnv *, jclass, jstring, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jint, jint, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionMethodDeclarationEnd
 * Signature: (IILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionMethodDeclarationEnd
#if 0
  (JNIEnv *, jclass, jint, jint, jobject);
#else
  (JNIEnv *, jclass, jint, jobject); 
#endif


/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionTypeParameterReference
 * Signature: (Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionTypeParameterReference
  (JNIEnv *, jclass, jstring, jstring, jint, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionTypeReference
 * Signature: (Ljava/lang/String;Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionTypeReference
  (JNIEnv *, jclass, jstring, jstring, jobject, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionQualifiedTypeReference
 * Signature: (Ljava/lang/String;Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionQualifiedTypeReference
  (JNIEnv *, jclass, jstring, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionArgument
 * Signature: (Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionArgument
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionArgumentEnd
 * Signature: (ILjava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionArgumentEnd
  (JNIEnv *, jclass, jint, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionCatchArgument
 * Signature: (Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionCatchArgument
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionCatchArgumentEnd
 * Signature: (ILjava/lang/String;IZLX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionCatchArgumentEnd
  (JNIEnv *, jclass, jint, jstring, jint, jboolean, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionArrayTypeReference
 * Signature: (ILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionArrayTypeReference
  (JNIEnv *, jclass, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionArrayTypeReferenceEnd
 * Signature: (Ljava/lang/String;ILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionArrayTypeReferenceEnd
  (JNIEnv *, jclass, jstring, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionMessageSend
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionMessageSend
  (JNIEnv *, jclass, jstring, jstring, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionMessageSendEnd
 * Signature: (ZZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;IIILjava/lang/Ojbect;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionMessageSendEnd
#if 0
  (JNIEnv *, jclass, jboolean, jboolean, jstring, jstring, jstring, jint, jint, jint, jobject);
#else
  (JNIEnv *, jclass, jboolean, jboolean, jstring, jint, jint, jint, /*jobject,*/ jobject);
#endif


/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionStringLiteral
 * Signature: (Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionStringLiteral
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionAllocationExpression
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionAllocationExpression
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionAllocationExpressionEnd
 * Signature: (ZILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionAllocationExpressionEnd
  (JNIEnv *, jclass, jboolean, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionANDANDExpression
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionANDANDExpression
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionANDANDExpressionEnd
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionANDANDExpressionEnd
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionAnnotationMethodDeclaration
 * Signature: (Ljava/lang/String;ILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionAnnotationMethodDeclaration
  (JNIEnv *, jclass, jstring, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionAnnotationMethodDeclarationEnd
 * Signature: (Ljava/lang/String;IIZLX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionAnnotationMethodDeclarationEnd
  (JNIEnv *, jclass, jstring, jint, jint, jboolean, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionArrayAllocationExpression
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionArrayAllocationExpression
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionArrayAllocationExpressionEnd
 * Signature: (IZLX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionArrayAllocationExpressionEnd
  (JNIEnv *, jclass, jint, jboolean, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionArrayInitializer
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionArrayInitializer
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionArrayInitializerEnd
 * Signature: (ILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionArrayInitializerEnd
  (JNIEnv *, jclass, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionArrayReference
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionArrayReference
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionArrayReferenceEnd
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionArrayReferenceEnd
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionAssertStatement
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionAssertStatement
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionAssertStatementEnd
 * Signature: (ZLX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionAssertStatementEnd
  (JNIEnv *, jclass, jboolean, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionAssignment
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionAssignment
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionAssignmentEnd
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionAssignmentEnd
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionBinaryExpression
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionBinaryExpression
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionBinaryExpressionEnd
 * Signature: (ILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionBinaryExpressionEnd
  (JNIEnv *, jclass, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionBlock
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionBlock
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionBlockEnd
 * Signature: (ILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionBlockEnd
  (JNIEnv *, jclass, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionBreakStatement
 * Signature: (Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionBreakStatement
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionCaseStatement
 * Signature: (ZLX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionCaseStatement
  (JNIEnv *, jclass, jboolean, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionCaseStatementEnd
 * Signature: (ZLX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionCaseStatementEnd
  (JNIEnv *, jclass, jboolean, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionCastExpression
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionCastExpression
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionCastExpressionEnd
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionCastExpressionEnd
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionCharLiteral
 * Signature: (CLX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionCharLiteral
  (JNIEnv *, jclass, jchar, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionClassLiteralAccess
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionClassLiteralAccess
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionClassLiteralAccessEnd
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionClassLiteralAccessEnd
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionClinit
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionClinit
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionConditionalExpression
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionConditionalExpression
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionConditionalExpressionEnd
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionConditionalExpressionEnd
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionContinueStatement
 * Signature: (Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionContinueStatement
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionCompoundAssignment
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionCompoundAssignment
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionCompoundAssignmentEnd
 * Signature: (ILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionCompoundAssignmentEnd
  (JNIEnv *, jclass, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionDoStatement
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionDoStatement
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionDoStatementEnd
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionDoStatementEnd
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionDoubleLiteral
 * Signature: (DLjava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionDoubleLiteral
  (JNIEnv *, jclass, jdouble, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionEmptyStatement
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionEmptyStatement
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionEmptyStatementEnd
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionEmptyStatementEnd
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionEqualExpression
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionEqualExpression
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionEqualExpressionEnd
 * Signature: (ILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionEqualExpressionEnd
  (JNIEnv *, jclass, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionExtendedStringLiteral
 * Signature: (Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionExtendedStringLiteral
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionFalseLiteral
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionFalseLiteral
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionFieldDeclarationEnd
 * Signature: (Ljava/lang/String;IZZZZZZZZZZLX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionFieldDeclarationEnd
#if 0
  (JNIEnv *, jclass, jstring, jint, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jobject);
#else
  (JNIEnv *, jclass, jstring, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jobject);
#endif

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionFieldReference
 * Signature: (Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionFieldReference
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionFieldReferenceEnd
 * Signature: (ZLjava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionFieldReferenceEnd
  (JNIEnv *, jclass, jboolean, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionFloatLiteral
 * Signature: (FLjava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionFloatLiteral
  (JNIEnv *, jclass, jfloat, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionForeachStatement
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionForeachStatement
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionForeachStatementEnd
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionForeachStatementEnd
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionForStatement
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionForStatement
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionForStatementEnd
 * Signature: (IZILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionForStatementEnd
  (JNIEnv *, jclass, jint, jboolean, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionIfStatement
 * Signature: (ZLX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionIfStatement
#if 0
  (JNIEnv *, jclass, jboolean, jobject);
#else
  (JNIEnv *, jclass, jobject);
#endif

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionIfStatementEnd
 * Signature: (ZLX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionIfStatementEnd
  (JNIEnv *, jclass, jboolean, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionImportReference
 * Signature: (ZLjava/lang/String;ZLX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionImportReference
  (JNIEnv *, jclass, jboolean, jstring, jboolean, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionInitializer
 * Signature: (ZLjava/lang/String;ILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionInitializer
  (JNIEnv *, jclass, jboolean, jstring, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionInitializerEnd
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionInitializerEnd
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionInstanceOfExpression
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionInstanceOfExpression
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionInstanceOfExpressionEnd
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionInstanceOfExpressionEnd
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionIntLiteral
 * Signature: (ILjava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionIntLiteral
  (JNIEnv *, jclass, jint, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionLabeledStatement
 * Signature: (Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionLabeledStatement
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionLabeledStatementEnd
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionLabeledStatementEnd
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionLocalDeclaration
 * Signature: (ILjava/lang/String;ZLX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionLocalDeclaration
  (JNIEnv *, jclass, jint, jstring, jboolean, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionLocalDeclarationEnd
 * Signature: (Ljava/lang/String;ZLX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionLocalDeclarationEnd
  (JNIEnv *, jclass, jstring, jboolean, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionLongLiteral
 * Signature: (JLjava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionLongLiteral
  (JNIEnv *, jclass, jlong, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionMarkerAnnotationEnd
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionMarkerAnnotationEnd
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionMemberValuePairEnd
 * Signature: (Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionMemberValuePairEnd
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionStringLiteralConcatenation
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionStringLiteralConcatenation
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionNormalAnnotationEnd
 * Signature: (ILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionNormalAnnotationEnd
  (JNIEnv *, jclass, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionNullLiteral
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionNullLiteral
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionORORExpression
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionORORExpression
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionORORExpressionEnd
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionORORExpressionEnd
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionParameterizedTypeReference
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionParameterizedTypeReference
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionParameterizedTypeReferenceEnd
 * Signature: (Ljava/lang/String;Ljava/lang/String;ZILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionParameterizedTypeReferenceEnd
  (JNIEnv *, jclass, jstring, jstring, jboolean, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionParameterizedQualifiedTypeReferenceEnd
 * Signature: (Ljava/lang/String;ZILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionParameterizedQualifiedTypeReferenceEnd
  (JNIEnv *, jclass, jstring, jboolean, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionPostfixExpression
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionPostfixExpression
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionPostfixExpressionEnd
 * Signature: (ILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionPostfixExpressionEnd
  (JNIEnv *, jclass, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionPrefixExpression
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionPrefixExpression
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionPrefixExpressionEnd
 * Signature: (ILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionPrefixExpressionEnd
  (JNIEnv *, jclass, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionQualifiedAllocationExpression
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionQualifiedAllocationExpression
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionQualifiedAllocationExpressionEnd
 * Signature: (ZZIZLX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionQualifiedAllocationExpressionEnd
  (JNIEnv *, jclass, jboolean, jboolean, jint, jboolean, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionQualifiedSuperReference
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionQualifiedSuperReference
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionQualifiedSuperReferenceEnd
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionQualifiedSuperReferenceEnd
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionQualifiedThisReference
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionQualifiedThisReference
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionQualifiedThisReferenceEnd
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionQualifiedThisReferenceEnd
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionReturnStatement
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionReturnStatement
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionReturnStatementEnd
 * Signature: (ZLX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionReturnStatementEnd
  (JNIEnv *, jclass, jboolean, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionSingleMemberAnnotationEnd
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionSingleMemberAnnotationEnd
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionSingleNameReference
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionSingleNameReference
  (JNIEnv *, jclass, jstring, jstring, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionSuperReference
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionSuperReference
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionSwitchStatement
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionSwitchStatement
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionSwitchStatementEnd
 * Signature: (IZLX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionSwitchStatementEnd
  (JNIEnv *, jclass, jint, jboolean, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionSynchronizedStatement
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionSynchronizedStatement
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionSynchronizedStatementEnd
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionSynchronizedStatementEnd
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionThisReference
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionThisReference
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionThrowStatement
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionThrowStatement
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionThrowStatementEnd
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionThrowStatementEnd
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionTrueLiteral
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionTrueLiteral
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionTryStatement
 * Signature: (IZLX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionTryStatement
  (JNIEnv *, jclass, jint, jboolean, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionTryStatementEnd
 * Signature: (IIZLX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionTryStatementEnd
  (JNIEnv *, jclass, jint, jint, jboolean, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionCatchBlockEnd
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionCatchBlockEnd
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionUnaryExpression
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionUnaryExpression
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionUnaryExpressionEnd
 * Signature: (ILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionUnaryExpressionEnd
  (JNIEnv *, jclass, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionWhileStatement
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionWhileStatement
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionWhileStatementEnd
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionWhileStatementEnd
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionWildcard
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionWildcard
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionWildcardEnd
 * Signature: (ZZZLX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionWildcardEnd
  (JNIEnv *, jclass, jboolean, jboolean, jboolean, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionSetupSourceFilename
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionSetupSourceFilename
  (JNIEnv *, jclass, jstring);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionClearSourceFilename
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionClearSourceFilename
  (JNIEnv *, jclass);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionInsertClassStart
 * Signature: (Ljava/lang/String;ZZZLX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionInsertClassStart
#if 1
  (JNIEnv *, jclass, jstring, jboolean, jboolean, jboolean, jobject);
#else
  (JNIEnv *, jclass, jstring, jobject);
#endif

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionInsertClassEnd
 * Signature: (Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionInsertClassEnd
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionBuildClassSupportStart
 * Signature: (Ljava/lang/String;Ljava/lang/String;ZZZZLX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionBuildClassSupportStart
  (JNIEnv *, jclass, jstring, jstring, jboolean, jboolean, jboolean, jboolean, jboolean, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionUpdateClassSupportStart
 * Signature: (Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionUpdateClassSupportStart
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionInsertTypeParameter
 * Signature: (Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionInsertTypeParameter
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionBuildTypeParameterSupport
 * Signature: (Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;ILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionBuildTypeParameterSupport
  (JNIEnv *, jclass, jstring, jstring, jint, jstring, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionUpdatePushMethodParameterScope
 * Signature: (Ljava/lang/String;Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionUpdatePushMethodParameterScope
  (JNIEnv *, jclass, jstring, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionUpdateTypeParameterSupport
 * Signature: (Ljava/lang/String;IILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionUpdateTypeParameterSupport
  (JNIEnv *, jclass, jstring, jint, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionUpdatePopMethodParameterScope
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionUpdatePopMethodParameterScope
  (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionBuildClassExtendsAndImplementsSupport
 * Signature: (IZILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionBuildClassExtendsAndImplementsSupport
#if 0
  (JNIEnv *, jclass, jint, jboolean, jint, jobject);
#else
  (JNIEnv *, jclass, jint, jobjectArray, jboolean, jstring, jint, jobjectArray, jobject);
#endif

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionBuildClassSupportEnd
 * Signature: (Ljava/lang/String;ILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionBuildClassSupportEnd
  (JNIEnv *, jclass, jstring, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionUpdateClassSupportEnd
 * Signature: (Ljava/lang/String;ZIILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionUpdateClassSupportEnd
  (JNIEnv *, jclass, jstring, jboolean, jint, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionBuildInnerTypeSupport
 * Signature: (Ljava/lang/String;Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionBuildInnerTypeSupport
  (JNIEnv *, jclass, jstring, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionUpdateInnerTypeSupport
 * Signature: (Ljava/lang/String;Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionUpdateInnerTypeSupport
  (JNIEnv *, jclass, jstring, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionBuildArgumentSupport
 * Signature: (Ljava/lang/String;Ljava/lang/String;ZZLX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionBuildArgumentSupport
#if 0
  (JNIEnv *, jclass, jstring, jstring, jboolean, jboolean, jobject);
#else
  (JNIEnv *, jclass, jstring, jboolean, jboolean, jobject);
#endif

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionUpdateArgumentSupport
 * Signature: (ILjava/lang/String;Ljava/lang/String;ZZLX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionUpdateArgumentSupport
  (JNIEnv *, jclass, jint, jstring, jstring, jboolean, jboolean, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionBuildMethodSupportStart
 * Signature: (Ljava/lang/String;ILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionBuildMethodSupportStart
  (JNIEnv *, jclass, jstring, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionUpdateMethodSupportStart
 * Signature: (Ljava/lang/String;IILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionUpdateMethodSupportStart
  (JNIEnv *, jclass, jstring, jint, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionBuildMethodSupportEnd
 * Signature: (Ljava/lang/String;IZZZIIZLX10Token;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionBuildMethodSupportEnd
  (JNIEnv *, jclass, jstring, jint, jboolean, jboolean, jboolean, jint, jint, jboolean, jobject, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionUpdateMethodSupportEnd
 * Signature: (Ljava/lang/String;IZILX10Token;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionUpdateMethodSupportEnd
  (JNIEnv *, jclass, jstring, jint, jboolean, jint, jobject, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionBuildFieldSupport
 * Signature: (Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionBuildFieldSupport
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionUpdateFieldSupport
 * Signature: (Ljava/lang/String;LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionUpdateFieldSupport
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionBuildInitializerSupport
 * Signature: (ZLjava/lang/String;ILX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionBuildInitializerSupport
  (JNIEnv *, jclass, jboolean, jstring, jint, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionArgumentName
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionArgumentName
  (JNIEnv *, jclass, jstring);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionArgumentModifiers
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionArgumentModifiers
  (JNIEnv *, jclass, jint);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionGetCurrentClassName
 * Signature: ()V
 */
JNIEXPORT jstring JNICALL Java_x10rose_visit_JNI_cactionGetCurrentClassName 
        (JNIEnv *env, jclass clz);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionSetCurrentClassName
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionSetCurrentClassName
        (JNIEnv *, jclass, jstring);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionSetCurrentFilePath
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionSetCurrentFilePath
        (JNIEnv *, jclass, jstring);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionAsync
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionAsync
        (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionAsyncEnd
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionAsyncEnd
        (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionFinish
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionFinish
        (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionFinishEnd
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionFinishEnd
        (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionAt
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionAt
        (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionAtEnd
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionAtEnd
        (JNIEnv *, jclass, jobject);

/*
 * Class:     x10rose_visit_JNI
 * Method:    cactionHere
 * Signature: (LX10Token;)V
 */
JNIEXPORT void JNICALL Java_x10rose_visit_JNI_cactionHere
        (JNIEnv *, jclass, jobject);
}
#ifdef __cplusplus
#endif
#endif
